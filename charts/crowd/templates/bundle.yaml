{{/*

Copyright Â© 2021 Bedag Informatik AG

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/}}
{{- include "bedag-lib.manifest.bundle" $ | nindent 0 }}

{{/*
  Define Crowd Chart Bundle
*/}}
{{- define "chart.bundle" -}}
common:
  commonLabels: {{- include "crowd.Labels" $ | nindent 4 }}
  {{- if $.Values.crowd.timezone }}
  timezone: "{{ $.Values.crowd.timezone }}"
  {{- end }}
resources:
  {{- if and $.Values.extraResources (kindIs "slice" $.Values.extraResources) }}
    {{- toYaml $.Values.extraResources | nindent 2 }}
  {{- end }}

  {{ $jmxExporter := (fromYaml (include "bedag-lib.utils.presets" (dict "preset" "jmxexporter" "values" $.Values.jmxExporter "context" $))) }}
  {{- if $jmxExporter.extraResources }}
    {{- toYaml $jmxExporter.extraResources | nindent 2 }}
  {{- end }}

  - type: "statefulset"
    values: {{ toYaml $.Values.statefulset | nindent 6 }}
    overwrites:

      {{/*
        InitContainers
      */}}
      initContainers:
        {{- if and $.Values.statefulset.initContainers (kindIs "slice" $.Values.statefulset.initContainers) }}
          {{- toYaml $.Values.statefulset | nindent 8 }}
        {{- end }}
        {{ include "bedag-lib.utils.presets" (dict "preset" "permissions" "values" (mergeOverwrite $.Values.volumePermissions (fromYaml (include "crowd.volumePermission.values" $))) "returnAsArray" true "context" $) | nindent 8 }}


      {{/*
        Keep replicaCount on 1, when Crowd is not running
        clustered mode or Crowd is being installed.
      */}}
      {{- if or (and ($.Release.IsInstall) ($.Values.crowd.cluster.enabled)) (not $.Values.crowd.cluster.enabled) }}
      replicaCount: 1
      {{- end }}

      {{/*
        Predefined Environment Variables
      */}}
      environment:
      {{- if $.Values.statefulset.environment }}
        {{- include "lib.utils.lists.exceptionList" (dict "list" $.Values.statefulset.environment "exceptions" (list "CROWD_HOME" "JVM_MINIMUM_MEMORY" "JVM_MAXIMUM_MEMORY" "JVM_SUPPORT_RECOMMENDED_ARGS" "ATL_TOMCAT_PORT" "CATALINA_OPTS") "context" $) | nindent 8 }}
      {{- end }}
      {{- include "crowd.configuration" $ | nindent 8 }}
        - name: "JVM_SUPPORT_RECOMMENDED_ARGS"
          value: {{ include "lib.utils.strings.template" (dict "value" (include "crowd.jvm_args" $) "context" $) | squote }}
        - name: "CATALINA_OPTS"
          value: {{ include "lib.utils.strings.template" (dict "value" (include "crowd.catalina_opts" $) "context" $) | squote }}


      {{/*
        Predefined Ports
      */}}
      ports:
        {{- if $.Values.statefulset.ports }}
          {{- toYaml $.Values.statefulset.ports | nindent 8 }}
        {{- end }}
        {{- if $jmxExporter.ports }}
          {{- toYaml $jmxExporter.ports | nindent 8 }}
        {{- end }}
        - name: http
          containerPort: {{ $.Values.crowd.port }}
          protocol: TCP

      {{/*
        Predefined Statefulset VolumeMounts
      */}}
      volumeMounts:
      {{- if $.Values.statefulset.volumeMounts }}
        {{- toYaml $.Values.statefulset.volumeMounts | nindent 8 }}
      {{- end }}
      {{- if $.Values.crowd.persistence }}
        {{- if $.Values.home.enabled }}
        - name: "home"
          mountPath: {{ include "crowd.home" $ }}
        {{- end }}
        {{- if and $.Values.crowd.cluster.enabled $.Values.shared.enabled }}
        - name: "shared"
          mountPath: {{ include "crowd.home" $ }}/shared
        {{- end }}
      {{- end }}

      {{/*
        Predefined Statefulset Volumes
      */}}
      volumes:
      {{- if $.Values.statefulset.volumes }}
        {{- toYaml $.Values.statefulset.volumes | nindent 8 }}
      {{- end }}
      {{- if $jmxExporter.volumes }}
        {{- toYaml $jmxExporter.volumes | nindent 8 }}
      {{- end }}
      {{- if $.Values.crowd.persistence }}
        {{- if and $.Values.crowd.cluster.enabled $.Values.shared.enabled }}
        - name: shared
          persistentVolumeClaim:
            claimName: {{ include "bedag-lib.utils.common.fullname" (dict "name" "shared" "context" $) }}
        {{- end }}
      {{- end }}

      {{/*
        Predefined Statefulset VolumeClaimTemplates
      */}}
      volumeClaimTemplates:
      {{- if $.Values.statefulset.volumeClaimTemplates }}
        {{- toYaml $.Values.statefulset.volumeClaimTemplates | nindent 8 }}
      {{- end }}
      {{- if $.Values.crowd.persistence }}
        {{- if $.Values.home.enabled }}
        - {{- include "bedag-lib.template.persistentvolumeclaim" (dict "pvc" $.Values.home "fullname" "home" "context" $) | nindent 10 }}
        {{- end }}
      {{- end }}


      {{/*
        Predefined Statefulset Sidecars
      */}}
      {{- if or $jmxExporter.container $.Values.statefulset.sidecars }}
      sidecars:
        {{- if $jmxExporter.container }}
        - {{- toYaml $jmxExporter.container | nindent 10 }}
        {{- end }}
        {{- if $.Values.statefulset.sidecars }}
          {{- toYaml $.Values.statefulset.sidecars | nindent 8 }}
        {{- end }}
      {{- end }}

  - type: "service"
    values: {{ toYaml $.Values.service | nindent 6 }}
  - type: "ingress"
    values: {{ toYaml $.Values.ingress | nindent 6 }}
  {{- if and $.Values.pdb (gt (int $.Values.statefulset.replicaCount) 1) }}
  - type: "podDisruptionBudget"
    values: {{ toYaml $.Values.pdb | nindent 6 }}
  {{- end }}
  {{- if $.Values.crowd.cluster.enabled }}
  - type: "horizontalPodAutoscaler"
    values: {{ toYaml $.Values.autoscaling | nindent 6 }}
    {{- if and $.Values.crowd.persistence $.Values.shared.enabled }}
  - type: "persistentVolumeClaim"
    values: {{ toYaml $.Values.shared | nindent 6 }}
    name: "shared"
    {{- end }}
  {{- end }}
{{- end }}
