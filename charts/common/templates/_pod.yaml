{{- define "common.pod" -}}
{{- $root := .root }}
{{- $name := .name }}
{{- $controllerValues := .controller }}

{{- /*
Distinguish between sensitive and non-sensitive config, first initialize empty dictionaries
(We need to know this here also, to specify the volumes or not)
*/ -}}
{{- $configFiles := $controllerValues.configFiles }}
{{- $secretConfigs := dict }}
{{- $nonSecretConfigs := dict }}
{{- /* now separating the configs */ -}}
{{- range $key, $val := $configFiles }}
  {{- if $val.secret }}
    {{- $secretConfigs := merge $secretConfigs (dict $key $val) }}
  {{- else }}
    {{- $nonSecretConfigs := merge $nonSecretConfigs (dict $key $val) }}
  {{- end }}
{{- end }}

{{- if $controllerValues.hostAliases }}
hostAliases:
  {{- with $controllerValues.hostAliases }}
  {{- toYaml . | nindent 2 }}
  {{- end -}}
{{- end }}

{{- if $controllerValues.serviceAccountName }}
serviceAccountName: {{ $controllerValues.serviceAccountName | quote }}
{{- end }}
automountServiceAccountToken: {{ $controllerValues.automountServiceAccountToken | default false }}
{{- if $controllerValues.priorityClassName }}
priorityClassName: {{ $controllerValues.priorityClassName | quote }}
{{- end }}
{{- if $controllerValues.restartPolicy }}
restartPolicy: {{ $controllerValues.restartPolicy | quote }}
{{- end }}
{{- if and (ne $controllerValues.terminationGracePeriodSeconds nil) (ge (int $controllerValues.terminationGracePeriodSeconds) 0) }}
terminationGracePeriodSeconds: {{ $controllerValues.terminationGracePeriodSeconds }}
{{- end }}
{{- if $controllerValues.containers }}
containers:
{{- range $containerName, $containerValues := $controllerValues.containers }}
{{- include "common.container" (dict "root" $root "componentName" $name "controllerValues" $controllerValues "containerName" $containerName "containerValues" $containerValues "configFiles" $configFiles) | indent 2 }}
{{- end }}
{{- end }}
{{- if $controllerValues.initContainers }}
initContainers:
{{- range $containerName, $containerValues := $controllerValues.initContainers }}
{{- include "common.container" (dict "root" $root "componentName" $name "controllerValues" $controllerValues "containerName" $containerName "containerValues" $containerValues "configFiles" $configFiles) | indent 2 }}
{{- end }}
{{- end }}
{{- if $controllerValues.podSecurityContext }}
{{- if $controllerValues.podSecurityContext.enabled }}
securityContext: {{- omit $controllerValues.podSecurityContext "enabled" | toYaml | nindent 2 }}
{{- end }}
{{- end }}
volumes:
  {{- range $controllerValues.volumes }}
  {{- if and .name .type }}
  - name: {{ template "library.name" $root }}-{{ .name }}
  {{- if eq .type "secret" }}
    secret:
      {{- if .existing }}
      secretName: {{ .name }}
      {{- if .optional }}
      optional: true
      {{- end }}
      {{- if .items }}
      items:
      {{- range .items }}
        - key: {{ .key }}
          path: {{ .path }}
      {{- end }}
      {{- end }}
      {{- else }}
      secretName: {{ template "library.name" $root }}-{{ .name }}
      {{- end }}
      {{- if .defaultMode }}
      defaultMode: {{ .defaultMode }}
      {{- end }}
  {{- else if eq .type "configMap" }}
    configMap:
      {{- if .existing }}
      name: {{ .name }}
      {{- if .optional }}
      optional: true
      {{- end }}
      {{- if .items }}
      items:
      {{- range .items }}
        - key: {{ .key }}
          path: {{ .path }}
      {{- end }}
      {{- end }}
      {{- else }}
      name: {{ template "library.name" $root }}-{{ .name }}
      {{- if .defaultMode }}
      defaultMode: {{ .defaultMode }}
      {{- end }}
      {{- end }}
  {{- else if eq .type "persistentVolumeClaim" }}
    persistentVolumeClaim:
      claimName: {{ template "library.name" $root }}-{{ .claimNameSuffix }}
      {{- if .readOnly }}
      readOnly: {{ .readOnly }}
      {{- end }}
  {{- else if eq .type "emptyDir" }}
    {{- if or .sizeLimit .medium }}
    emptyDir:
      {{- if .medium }}
      medium: {{ .medium }}
      {{- end }}
      {{- if .sizeLimit }}
      sizeLimit: {{ .sizeLimit }}
      {{- end }}
    {{- else }}
    emptyDir: {}
    {{- end }}
  {{- else if eq .type "external" }}
    {{- if .pvcName }}
    persistentVolumeClaim:
      claimName: {{ .pvcName }}
      {{- if .readOnly }}
      readOnly: {{ .readOnly }}
      {{- end }}
    {{- end }}
  {{- else if eq .type "csi" }}
    {{- if .driver }}
    csi:
      driver: {{ .driver }}
      {{- if .readOnly }}
      readOnly: {{ .readOnly }}
      {{- end }}
      {{- if .volumeAttributes }}
      volumeAttributes:
        {{- range $key, $val := .volumeAttributes }}
        {{ $key }}: {{ $val }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if or $controllerValues.containers $controllerValues.initContainers }}
  {{- $containers := merge (dict) ($controllerValues.containers | default dict) ($controllerValues.initContainers | default dict) }}
  {{- range $containerName, $containerValues := $containers }}
  {{- $configFiles := $containerValues.configFiles }}
  {{- if $configFiles }}
  {{- $secretConfigs := dict }}
  {{- $nonSecretConfigs := dict }}
  {{- /* now separating the configs */ -}}
  {{- range $key, $val := $configFiles }}
  {{- if $val.secret }}
    {{- $secretConfigs := merge $secretConfigs (dict $key $val) }}
  {{- else }}
    {{- $nonSecretConfigs := merge $nonSecretConfigs (dict $key $val) }}
  {{- end }}
  {{- end }}
  {{- if $nonSecretConfigs }}
  - name: {{ $containerName }}-configfiles
    configMap:
      name: {{ template "library.name" $root }}-{{ $name }}-{{ $containerName }}-configfiles
      {{- if $containerValues.configFilesDefaultMode }}
      defaultMode: {{ $containerValues.configFilesDefaultMode }}
      {{- end }}
  {{- end }}
  {{- if $secretConfigs }}
  - name: {{ $containerName }}-secret-configfiles
    secret:
      secretName: {{ template "library.name" $root }}-{{ $name }}-{{ $containerName }}-secret-configfiles
      {{- if $containerValues.configFilesDefaultMode }}
      defaultMode: {{ $containerValues.configFilesDefaultMode }}
      {{- end }}
  {{- end }}
  {{- end }}
  {{- $binaryFiles := $containerValues.binaryFiles }}
  {{- if $binaryFiles }}
  - name: {{ $containerName }}-binaryfiles
    secret:
      secretName: {{ template "library.name" $root }}-{{ $name }}-{{ $containerName }}-binaryfiles
  {{- end }}
  {{- end }}
  {{- end }}
{{- with $controllerValues.nodeSelector }}
nodeSelector:
{{ toYaml . | indent 2 }}
{{- end }}
{{- with $controllerValues.affinity }}
affinity:
{{ toYaml . | indent 2 }}
{{- end }}
{{- with $controllerValues.tolerations }}
tolerations:
{{ toYaml . | indent 2 }}
{{- end }}
{{- if $root.Values.secrets }}
{{- if $root.Values.secrets.data }}
{{- if $root.Values.secrets.data.registry }}
{{- if $root.Values.secrets.data.registry.pullSecret.enabled }}
imagePullSecrets:
{{- if $root.Values.secrets.data.registry.pullSecret.name }}
  - name: {{ $root.Values.secrets.data.registry.pullSecret.name }}
{{- else }}
  - name: {{ template "library.name" $root }}-registry-pull-secret
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end -}}
