{{- if (include "machine-controller.enabled" $) -}}
  {{- $machine := $.Values.machine -}}
  {{- $manifest := $machine.controller -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "machine-controller.fullname" $ }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "machine-controller.labels" $ | nindent 4 }}
    {{- with (include "pkg.components.labels" (dict "labels" $machine.labels "ctx" $)) }}
      {{-  . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "machine-controller.manifests.checksum" $ | nindent 4 }}
    {{- with (include "pkg.components.annotations" (dict "annotations" $machine.annotations "ctx" $)) }}
      {{-  . | nindent 4 }}
    {{- end }}
spec:
  {{- if not $machine.autoscaling.enabled }}
  replicas: {{ $machine.replicaCount }}
  {{- end }}
  {{- with $machine.strategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "machine-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations: {{- include "pkg.components.pod_annotations" (dict "annotations" $machine.podAnnotations "ctx" $) | nindent 8 }}
        {{ include "machine-controller.manifests.checksum" $ }}
        {{ include "machine-controller.webhooks.checksum" $ }}
      labels: {{- include "machine-controller.selectorLabels" . | nindent 8 }}
        {{- include "pkg.components.pod_labels" (dict "labels" $machine.podLabels "ctx" $) | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: {{ include "machine-controller.serviceAccountName" . }}
      {{- with (include "pkg.components.podSecurityContext" (dict "psc" $machine.podSecurityContext "ctx" $)) }}
      securityContext: {{ . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      imagePullSecrets: {{ include "pkg.images.registry.pullsecrets" $ | nindent 8 }}
        {{- with $machine.imagePullSecrets }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      initContainers: {{- include "pkg.cluster.connectivity" $ | nindent 8 }}
      {{- if $machine.component.ensureManifestsOnStartup }}
        {{- include "machine-controller.manifest-init" $ | nindent 8 }}
      {{- end }}
      containers:
          {{- with $machine.controller }}
        - name: manager
            {{- with (include "pkg.components.securityContext" (dict "sc" .securityContext "ctx" $)) }}
          securityContext: {{ . | nindent 12 }}
            {{- end }}
          image: {{ include "pkg.images.registry.convert" (dict "image" .image "tag_overwrite" $machine.version "ctx" $) }}
          imagePullPolicy: {{ include "pkg.images.registry.pullpolicy" (dict "policy" .image.pullPolicy "ctx" $) }}
          env: 
          {{- if .injectProxy }}
            {{- include "pkg.common.env.w-proxy" $ | nindent 10 }}
          {{- else }}
            {{- include "pkg.common.env" $ | nindent 10 }}
          {{- end }}          
          {{- with .envs }}
            {{- include "pkg.utils.envs" (dict "envs" . "ctx" $) | nindent 10 }}
          {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "machine-controller.fullname" $ }}-providers
            {{- with .envsFrom }}
              {{- toYaml . | nindent 10 }}
            {{- end }}
          command:
            - /usr/local/bin/machine-controller
            {{- include "machine-controller.controller.args" $ | nindent 12 }}
            - -metrics-address=0.0.0.0:8080
            - -health-probe-address=0.0.0.0:8085
            {{- if (include "operating-system-manager.enabled" $) }}
            - -use-external-bootstrap
            {{- end }}
            {{- with (include "machine-controller.runtime" $) }}
            - -node-container-runtime={{ . }}
            {{- end }}
            {{- with (include "machine-controller.pause" $) }}
            - -node-pause-image={{ . }}
            {{- end }}
            {{- with .args }}
              {{- include "pkg.utils.args" (dict "args" . "ctx" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: healthz
              containerPort: 8085
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 12}}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12}}
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts: {{- include "pkg.cluster.cp.vms" $ | nindent 10 }}
            {{- with .volumeMounts }}
              {{- toYaml . | nindent 10 }}
            {{- end }}
          {{- end }}

          {{/* Admission Controller */}}
          {{- if (include "machine-controller.admission-enabled" $) }}
            {{- with $machine.admission }}
        - name: webhook
          image: {{ include "pkg.images.registry.convert" (dict "image" .image "tag_overwrite" $machine.version "ctx" $) }}
          imagePullPolicy: {{ include "pkg.images.registry.pullpolicy" (dict "policy" .image.pullPolicy "ctx" $) }}
          env: 
          {{- if .injectProxy }}
            {{- include "pkg.common.env.w-proxy" $ | nindent 10 }}
          {{- else }}
            {{- include "pkg.common.env" $ | nindent 10 }}
          {{- end }}           
          {{- with .envs }}
            {{- include "pkg.utils.envs" (dict "envs" . "ctx" $) | nindent 10 }}
          {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "machine-controller.fullname" $ }}-providers
            {{- with .envsFrom }}
              {{- toYaml . | nindent 10 }}
            {{- end }}
          command:
            - /usr/local/bin/webhook
            - -kubeconfig={{ include "pkg.cluster.cp.env.mount" $ }}
            - -namespace={{ $.Release.Namespace }}
            - -logtostderr
            - -tls-cert-path={{ include "machine-controller.volumemounts.certs.path" $ }}/tls.crt
            - -tls-key-path={{ include "machine-controller.volumemounts.certs.path" $ }}/tls.key
              {{- if (include "operating-system-manager.enabled" $) }}
            - -use-external-bootstrap
              {{- end }}
            - -listen-address=0.0.0.0:9876
            {{- with .args }}
              {{- include "pkg.utils.args" (dict "args" . "ctx" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: https
              containerPort: 9876
              protocol: TCP
            {{- with (include "pkg.components.securityContext" (dict "sc" .securityContext "ctx" $)) }}
          securityContext: {{ . | nindent 12 }}
            {{- end }}
          livenessProbe:
              {{- toYaml .livenessProbe | nindent 12}}
          readinessProbe:
              {{- toYaml .readinessProbe | nindent 12}}
          resources:
              {{- toYaml .resources | nindent 12 }}
          volumeMounts: {{- include "pkg.cluster.cp.vms" $ | nindent 12 }}
              {{- include "machine-controller.volumemounts.certs" $ | nindent 12 }}
              {{- with .volumeMounts }}
                {{- toYaml . | nindent 12 }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- with (include "pkg.components.nodeselector" (dict "nodeselector" $machine.nodeSelector "ctx" $)) }}
      nodeSelector: {{- . | nindent 8 }}
      {{- end }}
      {{- with (include "pkg.components.affinity" (dict "affinity" $machine.affinity "ctx" $)) }}
      affinity: {{- . | nindent 8 }}
      {{- end }}
      {{- with (include "pkg.components.tolerations" (dict "tolerations" $machine.tolerations "ctx" $)) }}
      tolerations:  {{- . | nindent 8 }}
      {{- end }}
      {{- with (include "pkg.components.priorityClass" (dict "pc" $machine.priorityClassName "ctx" $)) }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with (include "pkg.components.topologySpreadConstraints" (dict "tsc" $machine.topologySpreadConstraints "ctx" $)) }}
      topologySpreadConstraints: {{ . | nindent 8 }}
      {{- end }}
      volumes: {{- include "pkg.cluster.cp.vs" $ | nindent 8 }}
      {{- include "machine-controller.volumes" $ | nindent 8 }}
      {{- with $machine.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
