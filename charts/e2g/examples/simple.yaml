## Enable deployment
deployment:
  enabled: true

## Set e2g config lists and stories
e2g:
  filtergroups:
    - id: 1
      config: | 
        # e2guardian filter group config file for version 5.3.5

        # This file is re-read on gentle restart and any changes actioned

        # Filter group mode IS NOT LONGER SUPPORTED
        # Unauthenticated users are treated as being in the default filter group.
        # groupmode = 1 #DISABLED

        # Filter group name
        # Used to fill in the -FILTERGROUP- placeholder in the HTML template file, and to
        # name the group in the access logs
        # Defaults to empty string
        #groupname = ''
        groupname = 'no_name_group'

        # Much logic has moved to storyboard files
        storyboard = '/usr/local/e2guardian/etc/e2guardian/examplef1.story'

        # Enable legacy (DG) ssl logic
        #
        # The following option is replaced by storyboard logic
        # ssllegacylogic = off

        # Content filtering files location

        bannedphraselist = '/usr/local/e2guardian/etc/e2guardian/lists/bannedphraselist'
        weightedphraselist = '/usr/local/e2guardian/etc/e2guardian/lists/weightedphraselist'
        exceptionphraselist = '/usr/local/e2guardian/etc/e2guardian/lists/exceptionphraselist'
        ## To use new phraselists comment the last three lines and
        ## uncommnet the next 3 lines
        #bannedphraselist = '/usr/local/e2guardian/etc/e2guardian/lists/newbannedphraselist'
        #weightedphraselist = '/usr/local/e2guardian/etc/e2guardian/lists/newweightedphraselist'
        #exceptionphraselist = '/usr/local/e2guardian/etc/e2guardian/lists/newexceptionphraselist'

        ### NOTE - New format for all other list definitions in v5.0
        ###        see notes/V5_list_definition for details

        #banned lists
        sitelist = 'name=banned,messageno=500,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedsitelist'
        ipsitelist = 'name=banned,messageno=510,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedsiteiplist'
        urllist = 'name=banned,messageno=501,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedurllist'
        regexpboollist = 'name=banned,messageno=503,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedregexpurllist'
        regexpboollist = 'name=banneduseragent,messageno=522,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedregexpuseragentlist'

        sitelist = 'name=bannedssl,messageno=520,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedsslsitelist'
        ipsitelist = 'name=bannedssl,messageno=520,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedsslsiteiplist'

        #grey (i.e. content check) lists
        sitelist = 'name=grey,path=/usr/local/e2guardian/etc/e2guardian/lists/greysitelist'
        ipsitelist = 'name=grey,path=/usr/local/e2guardian/etc/e2guardian/lists/greysiteiplist'
        urllist = 'name=grey,path=/usr/local/e2guardian/etc/e2guardian/lists/greyurllist'
        sitelist = 'name=greyssl,path=/usr/local/e2guardian/etc/e2guardian/lists/greysslsitelist'
        ipsitelist = 'name=greyssl,path=/usr/local/e2guardian/etc/e2guardian/lists/greysslsiteiplist'

        #exception lists
        sitelist = 'name=exception,messageno=602,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionsitelist'
        ipsitelist = 'name=exception,messageno=602,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionsiteiplist'
        urllist = 'name=exception,messageno=603,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionurllist'
        regexpboollist = 'name=exception,messageno=609,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionregexpurllist'
        regexpboollist = 'name=exceptionuseragent,messageno=610,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionregexpuseragentlist'

        sitelist = 'name=refererexception,messageno=620,path=/usr/local/e2guardian/etc/e2guardian/lists/refererexceptionsitelist'
        ipsitelist = 'name=refererexception,messageno=620,path=/usr/local/e2guardian/etc/e2guardian/lists/refererexceptionsiteiplist'
        urllist = 'name=refererexception,messageno=620,path=/usr/local/e2guardian/etc/e2guardian/lists/refererexceptionurllist'
        sitelist = 'name=embededreferer,path=/usr/local/e2guardian/etc/e2guardian/lists/embededreferersitelist'
        ipsitelist = 'name=embededreferer,path=/usr/local/e2guardian/etc/e2guardian/lists/embededreferersiteiplist'
        urllist = 'name=embededreferer,path=/usr/local/e2guardian/etc/e2guardian/lists/embededrefererurllist'

        #modification lists
        regexpreplacelist = 'name=change,path=/usr/local/e2guardian/etc/e2guardian/lists/urlregexplist'
        regexpreplacelist = 'name=sslreplace,path=/usr/local/e2guardian/etc/e2guardian/lists/sslsiteregexplist'

        #redirection lists
        regexpreplacelist = 'name=redirect,path=/usr/local/e2guardian/etc/e2guardian/lists/urlredirectregexplist'

        contentregexplist = '/usr/local/e2guardian/etc/e2guardian/lists/contentregexplist'

        # local versions of lists

        #local banned
        sitelist = 'name=localbanned,messageno=560,path=/usr/local/e2guardian/etc/e2guardian/lists/localbannedsitelist'
        #ipsitelist = 'name=localbanned,messageno=560,path=/usr/local/e2guardian/etc/e2guardian/lists/localbannedsiteiplist'
        #urllist = 'name=localbanned,messageno=561,path=/usr/local/e2guardian/etc/e2guardian/lists/localbannedurllist'
        #sitelist = 'name=localbannedssl,messageno=580,path=/usr/local/e2guardian/etc/e2guardian/lists/localbannedsslsitelist'
        #ipsitelist = 'name=localbannedssl,messageno=580,path=/usr/local/e2guardian/etc/e2guardian/lists/localbannedsslsiteiplist'
        searchlist = 'name=localbanned,messageno=581,path=/usr/local/e2guardian/etc/e2guardian/lists/localbannedsearchlist'

        #local grey lists
        sitelist = 'name=localgrey,path=/usr/local/e2guardian/etc/e2guardian/lists/localgreysitelist'
        #ipsitelist = 'name=localgrey,path=/usr/local/e2guardian/etc/e2guardian/lists/localgreysiteiplist'
        #urllist = 'name=localgrey,path=/usr/local/e2guardian/etc/e2guardian/lists/localgreyurllist'
        sitelist = 'name=localgreyssl,path=/usr/local/e2guardian/etc/e2guardian/lists/localgreysslsitelist'
        #ipsitelist = 'name=localgreyssl,path=/usr/local/e2guardian/etc/e2guardian/lists/localgreysslsiteiplist'

        #local exception lists
        sitelist = 'name=localexception,messageno=662,path=/usr/local/e2guardian/etc/e2guardian/lists/localexceptionsitelist'
        #ipsitelist = 'name=localexception,messageno=662,path=/usr/local/e2guardian/etc/e2guardian/lists/localexceptionsiteiplist'
        #urllist = 'name=localexception,messageno=663,path=/usr/local/e2guardian/etc/e2guardian/lists/localexceptionurllist'


        # Filetype filtering
        #
        # Allow bannedregexpurllist with grey list mode
        #
        # The following option is replaced by storyboard logic
        # bannedregexwithblanketblock = off
        #
        # The following option is replaced by storyboard logic
        #blockdownloads = off

        # Phrase filtering additional mime types (by default text/*)
        # textmimetypes = 'application/xhtml+xml,application/xml,application/json,application/javascript,application/x-javascript'

        # Uncomment the two lines below if want to only allow extentions/mime types in these lists
        # You will also need to uncomment the checkfiletype function in site.story to enable this
        #fileextlist = 'name=exceptionextension,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionextensionlist'
        #mimelist = 'name=exceptionmime,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionmimetypelist'
        #
        # Use the following lists to block specific kinds of file downloads.
        #
        fileextlist = 'name=bannedextension,messageno=900,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedextensionlist'
        mimelist = 'name=bannedmime,messageno=800,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedmimetypelist'
        #
        # In either file filtering mode, the following list can be used to override
        # MIME type & extension blocks for particular domains & URLs (trusted download sites).
        #
        sitelist = 'name=exceptionfile,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionfilesitelist'
        ipsitelist = 'name=exceptionfile,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionfilesiteiplist'
        urllist = 'name=exceptionfile,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionfileurllist'

        # POST protection (web upload and forms)
        # does not block forms without any file upload, i.e. this is just for
        # blocking or limiting uploads
        # measured in kibibytes after MIME encoding and header bumph
        # use 0 for a complete block
        # use higher (e.g. 512 = 512Kbytes) for limiting
        # use -1 for no blocking
        # NOTE: POST PROTECTION IS NOT YET IMPLIMENTED IN V5
        #maxuploadsize = 512
        #maxuploadsize = 0
        maxuploadsize = -1

        # Categorise without blocking:
        # Supply categorised lists here and the category string shall be logged against
        # matching requests, but matching these lists does not perform any filtering
        # action.
        #sitelist = 'name=log,path=/usr/local/e2guardian/etc/e2guardian/lists/logsitelist'
        #ipsitelist = 'name=log,path=/usr/local/e2guardian/etc/e2guardian/lists/logsiteiplist'
        #urllist = 'name=log,path=/usr/local/e2guardian/etc/e2guardian/lists/logurllist'
        #regexpboollist = 'name=log,path=/usr/local/e2guardian/etc/e2guardian/lists/logregexpurllist'

        # Outgoing HTTP header rules:
        # Optional lists for blocking based on, and modification of, outgoing HTTP
        # request headers.  Format for headerregexplist is one modification rule per
        # line, similar to content/URL modifications.  Format for
        # bannedregexpheaderlist is one regular expression per line, with matching
        # headers causing a request to be blocked.
        # Headers are matched/replaced on a line-by-line basis, not as a contiguous
        # block.
        # Use for example, to remove cookies or prevent certain user-agents.
        regexpreplacelist = 'name=headermods,path=/usr/local/e2guardian/etc/e2guardian/lists/headerregexplist'
        regexpboollist = 'name=bannedheader,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedregexpheaderlist'
        regexpboollist = 'name=exceptionheader,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionregexpheaderlist'
        # used for Youtube add cookies etc
        regexpreplacelist = 'name=addheader,path=/usr/local/e2guardian/etc/e2guardian/lists/addheaderregexplist'

        #Virus checking exceptions - matched urls will not be virus checked
        #Note that you also need to amend site.story in order for this to work.
        #mimelist = 'name=exceptionvirus,path=/usr/local/e2guardian/etc/e2guardian/lists/contentscanners/exceptionvirusmimetypelist'
        #fileextlist = 'name=exceptionvirus,path=/usr/local/e2guardian/etc/e2guardian/lists/contentscanners/exceptionvirusextensionlist'
        #sitelist = 'name=exceptionvirus,path=/usr/local/e2guardian/etc/e2guardian/lists/contentscanners/exceptionvirussitelist'
        #ipsitelist = 'name=exceptionvirus,path=/usr/local/e2guardian/etc/e2guardian/lists/contentscanners/exceptionvirussiteiplist'
        #urllist = 'name=exceptionvirus,path=/usr/local/e2guardian/etc/e2guardian/lists/contentscanners/exceptionvirusurllist'

        # Weighted phrase mode
        # Optional; overrides the weightedphrasemode option in e2guardian.conf
        # for this particular group.  See documentation for supported values in
        # that file.
        #weightedphrasemode = 0

        # Naughtiness limit
        # This the limit over which the page will be blocked.  Each weighted phrase is given
        # a value either positive or negative and the values added up.  Phrases to do with
        # good subjects will have negative values, and bad subjects will have positive
        # values.  See the weightedphraselist file for examples.
        # As a guide:
        # 50 is for young children,  100 for old children,  160 for young adults.
        naughtynesslimit = 50

        # Search term blocking
        # Search terms can be extracted from search URLs and filtered using one or
        # both of two different methods.

        # Method 1 is that developed by Protex where specific
        # search terms are contained in a bannedsearchlist.
        # (localbannedsearchlist and bannedsearchoveridelist can be used to suppliment
        # and overide this list as required.)
        # These lists contain banned search words combinations on each line.
        # Words are separated by '+' and must be in sorted order within a line.
        #    so to block 'sexy girl' then the list must contain the line
        #    	girl+sexy
        #    and this will block both 'sexy girl' and 'girl sexy'
        # To use this method, the searchregexplist must be enabled and the bannedsearchlist(s) defined

        # Method 2 is uses the
        # bannedphraselist, weightedphraselist and exceptionphraselist, with a separate
        # threshold for blocking than that used for normal page content.
        # To do this, the searchregexplist must be enabled and searchtermlimit
        # must be greater than 0.

        #
        # Search engine regular expression list (need for both options)
        # List of regular expressions for matching search engine URLs.  It is assumed
        # that the search terms themselves will be contained in the
        # of output of each expression.
        regexpreplacelist = 'name=searchterms,path=/usr/local/e2guardian/etc/e2guardian/lists/searchregexplist'
        #
        # Banned Search Term list(s) for option 1
        searchlist = 'name=banned,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedsearchlist'
        searchlist = 'name=override,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedsearchoveridelist'


        # Search term limit (for Option 2)
        # The limit over which requests will be blocked for containing search terms
        # which match the weightedphraselist.  This should usually be lower than the
        # 'naughtynesslimit' value above, because the amount of text being filtered
        # is only a few words, rather than a whole page.
        # This option must be uncommented if searchregexplist is uncommented.
        # A value of 0 here indicates that search terms should be extracted,
        # but no phrase filtering should be performed on the resulting text.
        #searchtermlimit = 0
        #
        # Search term phrase lists (for Option 2)
        # If the three lines below are uncommented, search term blocking will use
        # the banned, weighted & exception phrases from these lists, instead of using
        # the same phrase lists as for page content.  This is optional but recommended,
        # as weights for individual phrases in the "normal" lists may not be
        # appropriate for blocking when those phrases appear in a much smaller block
        # of text.
        # Please note that all or none of the below should be uncommented, not a
        # mixture.
        # NOTE: these are phrase lists and still use the old style defines
        #bannedsearchtermlist = '/usr/local/e2guardian/etc/e2guardian/lists/bannedsearchtermlist'
        #weightedsearchtermlist = '/usr/local/e2guardian/etc/e2guardian/lists/weightedsearchtermlist'
        #exceptionsearchtermlist = '/usr/local/e2guardian/etc/e2guardian/lists/exceptionsearchtermlist'

        # Category display threshold
        # This option only applies to pages blocked by weighted phrase filtering.
        # Defines the minimum score that must be accumulated within a particular
        # category in order for it to show up on the block pages' category list.
        # All categories under which the page scores positively will be logged; those
        # that were not displayed to the user appear in brackets.
        #
        # -1 = display only the highest scoring category
        # 0 = display all categories (default)
        # > 0 = minimum score for a category to be displayed
        categorydisplaythreshold = 0

        # Embedded URL weighting
        # When set to something greater than zero, this option causes URLs embedded within a
        # page's HTML (from links, image tags, etc.) to be extracted and checked against the
        # bannedsitelist and bannedurllist. Each link to a banned page causes the amount set
        # here to be added to the page's weighting.
        # The behaviour of this option with regards to multiple occurrences of a site/URL is
        # affected by the weightedphrasemode setting.
        #
        # NB: Currently, this feature uses regular expressions that require the PCRE library.
        # As such, it is only available if you compiled e2guardian with '--enable-pcre=yes'.
        # You can check compile-time options by running 'e2guardian -v'.
        #
        # Set to 0 to disable.
        # Defaults to 0.
        # WARNING: This option is highly CPU intensive!
        embeddedurlweight = 0

        # Temporary Denied Page Bypass
        # This provides a link on the denied page to bypass the ban for a few minutes.  To be
        # secure it uses a random hashed secret generated at daemon startup.  You define the
        # number of seconds the bypass will function for before the deny will appear again.
        # To allow the link on the denied page to appear you will need to edit the template.html
        # or e2guardian.pl file for your language.
        # 300 = enable for 5 minutes
        # 0 = disable ( defaults to 0 )
        # -1 - depreciated - for backward compatability enables cgibypass with bypassversion 1
        bypass = 0

        # Byapss version 2 is experimental, provide a secure cgi communication (see notes/cgi_bypass documentation)
        #

        # Bypass version
        # can be 1 or 2
        # Always use v2 unless you have old style cgi hash generation in use
        # Default is 1
        # bypassversion = 2

        # cgibypass - Use a separate program/CGI to (in v1 generate) or (in v2 validate) link
        # 'on' or 'off' (default)
        # cgibypass = 'off'

        # Temporary Denied Page Bypass Secret Key
        # Rather than generating a random key you can specify one.  It must be more than 8 chars.
        # '' = generate a random one (recommended and default)
        # 'Mary had a little lamb.' = an example
        # '76b42abc1cd0fdcaf6e943dcbc93b826' = an example
        bypasskey = ''

        # magic key for cgi bypass v2 - used to sign communications between e2g and cgi
        # default is blank
        #cgikey = 'you must change this text in order to be secure'

        #  Users will not be able to bypass sites/urls in these lists
        sitelist = 'name=bannedbypass,messageno=500,path=/usr/local/e2guardian/etc/e2guardian/lists/domainsnobypass'
        #ipsitelist = 'name=bannedbypass,messageno=500,path=/usr/local/e2guardian/etc/e2guardian/lists/ipnobypass'
        #urllist = 'name=bannedbypass,messageno=501,path=/usr/local/e2guardian/etc/e2guardian/lists/urlnobypass'

        # Infection/Scan Error Bypass
        # Similar to the 'bypass' setting, but specifically for bypassing files scanned and found
        # to be infected, or files that trigger scanner errors - for example, archive types with
        # recognised but unsupported compression schemes, or corrupt archives.
        # The option specifies the number of seconds for which the bypass link will be valid.
        # 300 = enable for 5 minutes
        # 0 = disable (default)
        # -1 - depreciated - for backward compatability enables cgiinfectionbypass with bypassversion 1
        infectionbypass = 0

        # cgiinfectionbypass - Use a separate program/CGI to (v1 generate) or (v2 validate) link
        # 'on' or 'off' (default)
        # cgiinfectionbypass = 'off'

        # Infection/Scan Error Bypass Secret Key
        # Same as the 'bypasskey' option, but used for infection bypass mode.
        infectionbypasskey = ''

        # Infection/Scan Error Bypass on Scan Errors Only
        # Enable this option to allow infectionbypass links only when virus scanning fails,
        # not when a file is found to contain a virus.
        # on = enable (default and highly recommended)
        # off = disable
        infectionbypasserrorsonly = on

        # Disable content scanning
        # If you enable this option you will disable content scanning for this group.
        # Content scanning primarily is AV scanning (if enabled) but could include
        # other types.
        # (on|off) default = off.
        disablecontentscan = off

        # Disable content scanning with error (timeout, AV crash, etc)
        # If you enable this option you will allow object with an unexpected result
        # Content scanning primarily is AV scanning (if enabled) but could include
        # other types.
        # With "on" you can allow INFECTED objects
        # (on|off) default = off. (default and highly recommended)
        disablecontentscanerror = off

        # If 'on' exception sites, urls, users etc will be scanned
        # This is probably not desirable behavour as exceptions are
        # supposed to be trusted and will increase load.
        # Correct use of grey lists are a better idea.
        # (on|off) default = off
        contentscanexceptions = off

        # Auth plugins
        # Enable Deep URL Analysis
        # When enabled, DG looks for URLs within URLs, checking against the bannedsitelist and
        # bannedurllist. This can be used, for example, to block images originating from banned
        # sites from appearing in Google Images search results, as the original URLs are
        # embedded in the thumbnail GET requests.
        # (on|off) default = off
        deepurlanalysis = off

        # reportinglevel
        #
        # -1 = log, but do not block - Stealth mode
        #  0 = just say 'Access Denied'
        #  1 = report why but not what denied phrase
        #  2 = report fully
        #  3 = use HTML template file (accessdeniedaddress ignored) - recommended
        #
        # If defined, this overrides the global setting in e2guardian.conf for
        # members of this filter group.
        #
        reportinglevel = 3

        # accessdeniedaddress is the address of your web server to which the cgi
        # e2guardian reporting script was copied. Only used in reporting levels
        # 1 and 2.
        #
        # This webserver must be either:
        #  1. Non-proxied. Either a machine on the local network, or listed as an
        #     exception in your browser's proxy configuration.
        #  2. Added to the exceptionsitelist. Option 1 is preferable; this option is
        #     only for users using both transparent proxying and a non-local server
        #     to host this script.
        #
        #accessdeniedaddress = 'http://YOURSERVER.YOURDOMAIN/cgi-bin/e2guardian.pl'

        # HTML Template override
        # If defined, this specifies a custom HTML template file for members of this
        # filter group, overriding the global setting in e2guardian.conf. This is
        # only used in reporting level 3.
        #
        # The default template file path is <languagedir>/<language>/template.html
        # e.g. /usr/local/e2guardian/share/e2guardian/languages/ukenglish/template.html when using 'ukenglish'
        # language.
        #
        # This option generates a file path of the form:
        # <languagedir>/<language>/<htmltemplate>
        # e.g. /usr/local/e2guardian/share/e2guardian/languages/ukenglish/custom.html
        #
        #htmltemplate = 'custom.html'

        #Template for use to report network issues and sites which are not responding
        # The default template file path is <languagedir>/<language>/neterr_template.html
        # e.g. /usr/local/e2guardian/share/e2guardian/languages/ukenglish/neterr_template.html when using 'ukenglish'
        # language.
        #neterrtemplate = 'custom_neterr_template.html'

        # Non standard delimiter (only used with accessdeniedaddress)
        # To help preserve the full banned URL, including parameters, the variables
        # passed into the access denied CGI are separated using non-standard
        # delimiters. This can be useful to ensure correct operation of the filter
        # bypass modes. Parameters are split using "::" in place of "&", and "==" in
        # place of "=".
        # Default is enabled, but to go back to the standard mode, disable it.

        #nonstandarddelimiter = off

        # Email reporting - original patch by J. Gauthier

        # Use SMTP
        # If on, will enable system wide events to be reported by email.
        # need to configure mail program (see 'mailer' in global config)
        # and email recipients
        # default usesmtp = off
        #!! Not compiled !!usesmtp = off   #NOT YET TESTED

        # mailfrom
        # who the email would come from
        # example: mailfrom = 'e2guardian@mycompany.com'
        #!! Not compiled !!mailfrom = ''

        # avadmin
        # who the virus emails go to (if notify av is on)
        # example: avadmin = 'admin@mycompany.com'
        #!! Not compiled !!avadmin = ''

        # contentdmin
        # who the content emails go to (when thresholds are exceeded)
        # and contentnotify is on
        # example: contentadmin = 'admin@mycompany.com'
        #!! Not compiled !!contentadmin = ''

        # avsubject
        # Subject of the email sent when a virus is caught.
        # only applicable if notifyav is on
        # default avsubject = 'e2guardian virus block'
        #!! Not compiled !!avsubject = 'e2guardian virus block'

        # content
        # Subject of the email sent when violation thresholds are exceeded
        # default contentsubject = 'e2guardian violation'
        #!! Not compiled !!contentsubject = 'e2guardian violation'

        # notifyAV
        # This will send a notification, if usesmtp/notifyav is on, any time an
        # infection is found.
        # Important: If this option is off, viruses will still be recorded like a
        # content infraction.
        #!! Not compiled !!notifyav = off

        # notifycontent
        # This will send a notification, if usesmtp is on, based on thresholds
        # below
        #!! Not compiled !!notifycontent = off

        # thresholdbyuser
        # results are only predictable with user authenticated configs
        # if enabled the violation/threshold count is kept track of by the user
        #!! Not compiled !!thresholdbyuser = off

        #violations
        # number of violations before notification
        # setting to 0 will never trigger a notification
        #!! Not compiled !!violations = 0

        #threshold
        # this is in seconds. If 'violations' occur in 'threshold' seconds, then
        # a notification is made.
        # if this is set to 0, then whenever the set number of violations are made a
        # notifaction will be sent.
        #!! Not compiled !!threshold = 0

        #NOTE to enable SSL MITM or NON-MITM SSL CERT checking
        # enablessl must be defined as 'yes' in e2guardian.conf

        #SSL certificate checking
        # Check that ssl certificates for servers on https connections are valid
        # and signed by a ca in the configured path
        # ONLY for connections that are NOT MITM
        #sslcertcheck = off - NOT implimented in V5 yet

        #SSL man in the middle
        # Forge ssl certificates for all non-exception sites, decrypt the data then re encrypt it
        # using a different private key. Used to filter ssl sites
        sslmitm = off

        #Limit SSL MITM to sites in greysslsitelist(s)
        # ignored if  sslmitm is off
        # SSL sites not matching greysslsitelist will be treat as if sslmitm is off.
        # The following option is replaced by storyboard logic
        #onlymitmsslgrey = off  - ignored in V5

        # Enable MITM site certificate checking
        # ignored if  sslmitm is off
        # default (recommended) is 'on'
        mitmcheckcert = on

        #Do not check ssl certificates for sites listed
        # Can be used to allow sites with self-signed or invalid certificates
        # or to reduced CPU load by not checking certs on heavily used sites (e.g. Google, Bing)
        # Use with caution!
        # Ignored if mitmcheckcert is 'off'
        #nocheckcertsitelist = '/usr/local/e2guardian/etc/e2guardian/lists/nocheckcertsitelist'
        sitelist = 'name=nocheckcert,path=/usr/local/e2guardian/etc/e2guardian/lists/nocheckcertsitelist'
        ipsitelist = 'name=nocheckcert,path=/usr/local/e2guardian/etc/e2guardian/lists/nocheckcertsiteiplist'
        #

        # Auto switch to MITM with upstream connection error or to deliver block page
        # ignored if  sslmitm is off
        # To revert to v4 type behavour switch this off
        # Default is 'on'
        # automitm = on
  story:
    - | 
        .Include</usr/local/e2guardian/etc/e2guardian/common.story>
        .Include</usr/local/e2guardian/etc/e2guardian/site.story>
        
        # Add any altered functions for this filtergroup here
        # They will overwrite library or site level definitions
        # To allow unfiltered access to this group 
        # uncomment next 4 lines
        #function(checkrequest)
        #if(true) return setexception
        #function(thttps-checkrequest)
        #if(true) return setexception

        # To block all access to this group 
        # uncomment next 4 lines
        #function(checkrequest)
        #if(true,,105) return setblock
        #function(sslexceptioncheck)
        #function(localsslcheckrequest)

        # Note: Blanket blocks are checked after exceptions
        # and can be used to make a 'walled garden' filtergroup
        # To create blanket block for http 
        # uncomment next line and one condition line.
        #function(checkblanketblock)
        #if(true,,502) return setblock  # = ** total blanket
        #if(siteisip,,505) return setblock  # = *ip ip blanket

        # To create blanket block for SSL 
        # uncomment next line and one condition line.
        #function(sslcheckblanketblock)
        #if(true,,506) return setblock  # = **s total blanket
        #if(siteisip,,507) return setblock  # = **ips ip blanket

        # To limit MITM to sslgreylist
        # replaces onlymitmsslgrey e2guardianf1.conf option
        # uncomment the next 2 lines
        #function(sslcheckmitm)
        #if(true) return sslcheckmitmgreyonly
        # SNI checking - overrides default action when no SNI or TSL is present on a 
        #    THTTPS connection
        # To allow (tunnell) non-tls and/or non-sni connections uncomment the next 3 lines
        #function(checksni)
        #ifnot(tls,,511) return setexception  # change to setblock to block only non-tls
        #ifnot(hassniset,,512) return setexception
  config: |
    # e2guardian config file for version 5.3.4
    
    #NOTE This file is only read at start-up
    #
    # but the lists defined in this file are re-read on reload or gentle restart
    # as is any rooms directory files.
    
    # Language dir where languages are stored for internationalisation.
    # The HTML template within this dir is only used when reportinglevel
    # is set to 3. When used, e2guardian will display the HTML file instead of
    # using the perl cgi script.  This option is faster, cleaner
    # and easier to customise the access denied page.
    # The language file is used no matter what setting however.
    #
    languagedir = '/usr/local/e2guardian/share/e2guardian/languages'
    
    # language to use from languagedir.
    language = 'ukenglish'
    
    #Debug Level
    #Enable debug e2guardian
    #debug one value:
    #Eg
    #	debuglevel = 'ICAP'
    #Enable ICAP debug informations only
    #
    #Eg
    debuglevel = 'ALL'
    #Enable ALL debug informations
    #
    #Additive mode:
    #Eg
    #	debuglevel = 'ICAP,NET'
    #Enable ICAP and NET debug informations
    #
    #Soustractive mode:
    #Eg
    #	debuglevel = 'ALL,-ICAP'
    #Enable all debug informations but without ICAP debug informations
    #	debuglevel = 'ALL,-ICAP,-NET,-FILTER'
    #Enable all debug informations but without ICAP, NETWORK and FILTER debug informations
    #by default disabled, if this option is required just uncomment the line below
    #works also with e2guardian -N (-N Do not go into the background)
    #Possible value : ICAP CLAMAV ICAPC (icap client) 
    #debuglevel = 'ALL'
    
    #Directory for result of debug level (log)
    #Works only if debuglevel is enabled
    #
    #debuglevelfile = '/var/log/e2guardian/debuge2'
    
    # Logging Settings
    #
    # 0 = none  1 = just denied  2 = all text based  3 = all requests
    loglevel = 3 
    
    # Log Exception Hits
    # Log if an exception (user, ip, URL, phrase) is matched and so
    # the page gets let through.  Can be useful for diagnosing
    # why a site gets through the filter.
    # 0 = never log exceptions
    # 1 = log exceptions, but do not explicitly mark them as such
    # 2 = always log & mark exceptions (default)
    logexceptionhits = 2
    
    # Log File Format
    # 1 = Dansguardian format (space delimited)
    # 2 = CSV-style format
    # 3 = Squid Log File Format
    # 4 = Tab delimited
    # Protex format type 5 Tab delimited, squid style format with extra fields
    # for filter block/result codes, reasons, filter group, and system name 
    # used in arrays so that combined logs show originating server.
    # 5 = Protex format
    # Protex format type 6 Same format as above but system name field is blank
    # used in stand-alone systems.
    # 6 = Protex format with server field blanked
    
    logfileformat = 6 
    
    # Log a specific value from header
    # low case only
    # only used with logs: 1,5 and 6
    # logheadervalue = 'proxy-authorization:'
    
    # truncate large items in log lines
    # allowable values 10 to 32000
    # default 2000
    # unlimited not longer allowed - 0 will now set default of 2000 
    #maxlogitemlength = 2000
    
    # anonymize logs (blank out usernames & IPs)
    #anonymizelogs = off
    
    # Syslog logging
    #
    # Use syslog for access logging instead of logging to the file
    # at the defined or built-in "loglocation"
    #logsyslog = off
    
    #Suffix to append to program name when logging through syslog
    # Default is the e2Guardian instance number
    #namesuffix = $z
    
    # Log file location
    # 
    # Defines the log directory and filename.
    #loglocation = '/usr/local/e2guardian/var/log/e2guardian/access.log'
    
    # Defines optional request log path
    # This is for useful for debug purposes to log all requests before processing or setting filter group
    # See notes/LogRequests for details
    #rqloglocation = '/usr/local/e2guardian/var/log/e2guardian/request.log'
    
    # Dymamic statistics log file location
    #
    # Defines the dstats file directory and filename.
    # Once every 'dstatinterval' seconds, stats on number of threads in use,
    # Q sizes and other useful information is written to this file.
    # Format is similar to sar.  See notes/dstats_format for more details.
    # Default is not to write stats.
    #dstatlocation = '/usr/local/e2guardian/var/log/e2guardian/dstats.log'
    
    # Interval in seconds between stats output
    # Default 300 (= 5 mins)
    # Minimum 10 
    # Maximum 3600 (= 1 hour)
    #dstatinterval = 300  # = 5 minutes
    
    # Time format is epoch GMT+0 by default | statshumanreadable change to local zone
    #statshumanreadable = off
    
    # Container mode
    # the process will not fork into the background AND log in stdout 
    # In this mode systemd service is disabled !
    # Default:
    dockermode = on
    
    # Network Settings
    # 
    # the IP that e2guardian listens on.  If left blank e2guardian will
    # listen on all IPs.  That would include all NICs, loopback, modem, etc.
    # Normally you would have your firewall protecting this, but if you want
    # you can limit it to a certain IP. To bind to multiple interfaces,
    # specify each IP on an individual filterip line.
    # If mapportstoips is 'on' you can have the same IP twice so long as 
    # it has a different port.
    filterip =
    
    # loop prevention
    #
    # For loop prevention purposes list all IPs e2g can be reached on
    # Include all e2g host server IPs and any VIP used when when in an array.
    # Specify each IP on an individual checkip line.
    #
    # Defaults: Not set - no loop prevention 
    #         
    checkip = 127.0.0.1
    
    # the ports that e2guardian listens to.  Specify one line per filterip
    # line.  If both mapportstoips and mapauthtoports are set to 'on'
    # you can specify different authentication mechanisms per port but
    # only if the mechanisms can co-exist (e.g. basic/proxy auth can't)
    filterports = 8080
    #filterports = 8081
    
    # Map ports to IPs
    # If enabled map filterports to filterip - number of filterports must then be same as
    # number of filterip
    # If disabled will listen on all filterports on all filterips.
    # on (default) | off
    mapportstoips = off
    
    #port for transparent https
    #if defined enables tranparent https
    transparenthttpsport = 8443
    
    #port for ICAP
    #if defined enables icap mode 
    icapport = 1344  
    
    # the ip of upstream proxy - optional - if blank e2g will go direct to sites.
    # default is "" i.e. no proxy 
    #proxyip = 127.0.0.1
    
    # the port e2guardian connects to proxy on
    proxyport = 3128
    
    # Proxy timeout 
    # Set tcp timeout between the Proxy and e2guardian
     # This is a connection timeout
     # If proxy is remote you may need to increase this to 10 or more.
    # Min 5 - Max 100
    proxytimeout = 5
    
    # Connect timeout 
    # Set tcp timeout between the e2guardian and upstream service (proxy or target host)
     # This is a connection timeout
     # For remote sites you may need to increase this to 10 or more.
    # Min 1 - Max 100
    # default 3
    connecttimeout = 5
    
    # Connect retries
    # Set the number of retries to make on connection failure before giving up
    # Min 1 - Max 100
    # default 1
    
    # Proxy header exchange
    # Set timeout between the Proxy and e2guardian 
    # Min 20 - Max 300
    # If this is higher than proxies timeout user will get proxy Gateway error page
    # If lower e2guardian Gateway error page
    proxyexchange = 61
    
    # Pconn timeout
    # how long a persistent connection will wait for other requests
    # squid apparently defaults to 1 minute (persistent_request_timeout),
    # so wait slightly less than this to avoid duff pconns.
    # Min 5 - Max 300
    pcontimeout = 55
    
    # Whether to retrieve the original destination IP in transparent proxy
    # setups and check it against the domain pulled from the HTTP headers.
    #
    # Be aware that when visiting sites which use a certain type of round-robin
    # DNS for load balancing, DG may mark requests as invalid unless DG gets
    # exactly the same answers to its DNS requests as clients.  The chances of
    # this happening can be increased if all clients and servers on the same LAN
    # make use of a local, caching DNS server instead of using upstream DNS
    # directly.
    #
    # See http://www.kb.cert.org/vuls/id/435052
    # on (default) | off
    #!! Not compiled !! originalip = off
    
    # Banned image replacement
    # Images that are banned due to domain/url/etc reasons including those
    # in the adverts blacklists can be replaced by an image.  This will,
    # for example, hide images from advert sites and remove broken image
    # icons from banned domains.
    # on (default) | off
    usecustombannedimage = on
    custombannedimagefile = '/usr/local/e2guardian/share/e2guardian/transparent1x1.gif'
    
    #Banned flash replacement
    usecustombannedflash = on
    custombannedflashfile = '/usr/local/e2guardian/share/e2guardian/blockedflash.swf'
    
    # Filter groups options
    # filtergroups sets the number of filter groups. A filter group is a set of content
    # filtering options you can apply to a group of users.  The value must be 1 or more.
    # e2guardian will automatically look for e2guardianfN.conf where N is the filter
    # group.  To assign users to groups use the filtergroupslist option.  All users default
    # to filter group 1.  You must have some sort of authentication to be able to map users
    # to a group.
    filtergroups = 1
    filtergroupslist = '/usr/local/e2guardian/etc/e2guardian/lists/filtergroupslist'
    
    # default filtergroup for standard (explicit) mode
    # optional defaults to 1
    #defaultfiltergroup = 1;
    
    # default filtergroup for transparent proxy mode
    # optional defaults to 1
    #defaulttransparentfiltergroup = 1;
    
    # default filtergroup for ICAP mode
    # optional defaults to 1
    #defaulticapfiltergroup = 1;
    
    # If on it a user without group is considered like unauthenfied
    # E2guardian tries the next plugin
    # If off the user is connected with group1
    # Defaults to off
    # authrequiresuserandgroup = off
    
    # Authentication files location
    # These are now replaced with pre-authstoryboard logic but lists defined here
    #
    # bannediplist is ONLY for banned client IP
    iplist = 'name=bannedclient,messageno=100,logmessageno=103,path=/usr/local/e2guardian/etc/e2guardian/lists/bannediplist'
    # Put client dns names in bannedclientlist if required
    #sitelist = 'name=bannedclient,messageno=100,logmessageno=104,path=/usr/local/e2guardian/etc/e2guardian/lists/bannedclientlist'
    # exceptioniplist is ONLY for exception client IP
    iplist = 'name=exceptionclient,messageno=600,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptioniplist'
    # Put client dns names in exceptionclientlist if required
    #sitelist = 'name=exceptionclient,messageno=631,path=/usr/local/e2guardian/etc/e2guardian/lists/exceptionclientlist'
    
    # authexception lists are for exception sites/urls allowed before authentication# to allow for machines to update without user authentication
    iplist = 'name=authexception,messageno=602,path=/usr/local/e2guardian/etc/e2guardian/lists/authexceptioniplist'
    sitelist = 'name=authexception,messageno=602,path=/usr/local/e2guardian/etc/e2guardian/lists/authexceptionsitelist'
    urllist = 'name=authexception,messageno=603,path=/usr/local/e2guardian/etc/e2guardian/lists/authexceptionurllist'
    
    #Note: only iplist, sitelist, ipsitelist and urllist can currently be defined for use with pre-authstoryboard.
    
    # Per-Room definition directory
    # A directory containing text files containing the room's name followed by IPs or ranges
    # and optionaly site and url lists
    # Think of it as bannediplist and/or exceptions on crack
    # perroomdirectory = '/usr/local/e2guardian/etc/e2guardian/lists/rooms/'
    
    # Show weighted phrases found
    # If enabled then the phrases found that made up the total which excedes
    # the naughtyness limit will be logged and, if the reporting level is
    # high enough, reported. on | off
    showweightedfound = on
    
    # Weighted phrase mode
    # There are 3 possible modes of operation:
    # 0 = off = do not use the weighted phrase feature.
    # 1 = on, normal = normal weighted phrase operation.
    # 2 = on, singular = each weighted phrase found only counts once on a page.
    # 
    # IMPORTANT: Note that setting this to "0" turns off all features which
    # extract phrases from page content, including banned & exception
    # phrases (not just weighted), search term filtering, and scanning for
    # links to banned URLs.
    #
    weightedphrasemode = 2
    
    # Smart, Raw and Meta/Title phrase content filtering options
    # Smart is where the multiple spaces and HTML are removed before phrase filtering
    # Raw is where the raw HTML including meta tags are phrase filtered
    # Meta/Title is where only meta and title tags are phrase filtered (v. quick)
    # CPU usage can be effectively halved by using setting 0 or 1 compared to 2
    # 0 = raw only
    # 1 = smart only
    # 2 = both of the above (default)
    # 3 = meta/title
    phrasefiltermode = 2
    
    # Lower casing options
    # When a document is scanned the uppercase letters are converted to lower case
    # in order to compare them with the phrases.  However this can break Big5 and
    # other 16-bit texts.  If needed preserve the case.  As of version 2.7.0 accented
    # characters are supported.
    # 0 = force lower case (default)
    # 1 = do not change case
    # 2 = scan first in lower case, then in original case
    preservecase = 0
    
    # Note:
    # If phrasefiltermode and preserve case are both 2, this equates to 4 phrase
    # filtering passes. If you have a large enough userbase for this to be a
    # worry, and need to filter pages in exotic character encodings, it may be
    # better to run two instances on separate servers: one with preservecase 1
    # (and possibly forcequicksearch 1) and non ASCII/UTF-8 phrase lists, and one
    # with preservecase 0 and ASCII/UTF-8 lists.
    
    # Hex decoding options
    # When a document is scanned it can optionally convert %XX to chars.
    # If you find documents are getting past the phrase filtering due to encoding
    # then enable.  However this can break Big5 and other 16-bit texts.
    # off = disabled (default)
    # on = enabled
    hexdecodecontent = off
    
    # Force Quick Search rather than DFA search algorithm
    # The current DFA implementation is not totally 16-bit character compatible
    # but is used by default as it handles large phrase lists much faster.
    # If you wish to use a large number of 16-bit character phrases then
    # enable this option.
    # off (default) | on (Big5 compatible)
    forcequicksearch = off
    
    # Reverse lookups for banned site and URLs.
    # If set to on, e2guardian will look up the forward DNS for an IP URL
    # address and search for both in the banned site and URL lists.  This would
    # prevent a user from simply entering the IP for a banned address.
    # It will reduce searching speed somewhat so unless you have a local caching
    # DNS server, leave it off and use the Blanket IP Block option in the
    # f1.story file instead.
    reverseaddresslookups = off
    
    # Reverse lookups for banned and exception IP lists.
    # If set to on, e2guardian will look up the forward DNS for the IP
    # of the connecting computer.  
    # If a client computer is matched against an IP given in the lists, then the
    # IP will be recorded in any log entries; if forward DNS is successful and a
    # match occurs against a hostname, the hostname will be logged instead.
    # It will reduce searching speed somewhat so unless you have a local DNS server, 
    # leave it off.
    reverseclientiplookups = off
    
    # Perform reverse lookups on client IPs for successful requests.
    # If set to on, e2guardian will look up the forward DNS for the IP
    # of the connecting computer, and log host names (where available) rather than
    # IPs against requests.
    # This is not dependent on reverseclientiplookups being enabled; however, if it
    # is, enabling this option does not incur any additional forward DNS requests.
    logclienthostnames = off
    
    # Max content filter size
    # Sometimes web servers label binary files as text which can be very
    # large which causes a huge drain on memory and cpu resources.
    # To counter this, you can limit the size of the document to be
    # filtered and get it to just pass it straight through.
    # This setting also applies to content regular expression modification.
    # The value must not be higher than maxcontentramcachescansize
    # Do not set this too low as this will result in pages that contain a
    #  long preamble not being content filtered
    # The size is in Kibibytes - eg 2048 = 2Mb
    # use 0 to set it to maxcontentramcachescansize
    maxcontentfiltersize = 2048
    
    # Max content ram cache scan size
    # This is only used if you use a content scanner plugin such as AV
    # This is the max size of file that e2g will download and cache
    # in RAM.  After this limit is reached it will cache to disk
    # This value must be less than or equal to maxcontentfilecachescansize.
    # The size is in Kibibytes - eg 10240 = 10Mb
    # use 0 to set it to maxcontentfilecachescansize
    # This option may be ignored by the configured download manager.
    maxcontentramcachescansize = 2000
    
    # Max content file cache scan size
    # This is only used if you use a content scanner plugin such as AV
    # This is the max size file that DG will download
    # so that it can be scanned or virus checked.
    # This value must be greater or equal to maxcontentramcachescansize.
    # The size is in Kibibytes - eg 10240 = 10Mb
    maxcontentfilecachescansize = 20000
    
    # File cache dir
    # Where DG will download files to be scanned if too large for the
    # RAM cache.
    filecachedir = '/tmp'
    
    # Delete file cache after user completes download
    # When a file gets save to temp it stays there until it is deleted.
    # You can choose to have the file deleted when the user makes a sucessful
    # download.  This will mean if they click on the link to download from
    # the temp store a second time it will give a 404 error.
    # You should configure something to delete old files in temp to stop it filling up.
    # on|off (defaults to on)
    deletedownloadedtempfiles = on
    
    # Initial Trickle delay
    # This is the number of seconds a browser connection is left waiting
    # before first being sent *something* to keep it alive.  The
    # *something* depends on the download manager chosen.
    # Do not choose a value too low or normal web pages will be affected.
    # A value between 20 and 110 would be sensible
    # This may be ignored by the configured download manager.
    initialtrickledelay = 20
    
    # Trickle delay
    # This is the number of seconds a browser connection is left waiting
    # before being sent more *something* to keep it alive.  The
    # *something* depends on the download manager chosen.
    # This may be ignored by the configured download manager.
    trickledelay = 10
    
    # Download Managers
    # These handle downloads of files to be filtered and scanned.
    # They differ in the method they deal with large downloads.
    # Files usually need to be downloaded 100% before they can be
    # filtered and scanned before being sent on to the browser.
    # Normally the browser can just wait, but with content scanning,
    # for example to AV, the browser may timeout or the user may get
    # confused so the download manager has to do some sort of
    # 'keep alive'.
    #
    # There are various methods possible but not all are included.
    # The author does not have the time to write them all so I have
    # included a plugin systam.  Also, not all methods work with all
    # browsers and clients.  Specifically some fancy methods don't
    # work with software that downloads updates.  To solve this,
    # each plugin can support a regular expression for matching
    # the client's user-agent string, and lists of the mime types
    # and extensions it should manage.
    #
    # Note that these are the matching methods provided by the base plugin
    # code, and individual plugins may override or add to them.
    # See the individual plugin conf files for supported options.
    #
    # The plugins are matched in the order you specify and the last
    # one is forced to match as the default, regardless of user agent
    # and other matching mechanisms.
    #
    # NOTE - ONLY default downloadmanager is supported in v5
    downloadmanager = '/usr/local/e2guardian/etc/e2guardian/downloadmanagers/default.conf'
    
    # Content Scanners (Also known as AV scanners)
    # These are plugins that scan the content of all files your browser fetches
    # for example to AV scan.  You can have more than one content
    # scanner. The plugins are run in the order you specify.
    # This is one of the few places you can have multiple options of the same name.
    #
    # Some of the scanner(s) require 3rd party software and libraries eg clamav.
    # See the individual plugin conf file for more options (if any).
    #
    #contentscanner = '/usr/local/e2guardian/etc/e2guardian/contentscanners/clamdscan.conf'
    #!! Not compiled !! contentscanner = '/usr/local/e2guardian/etc/e2guardian/contentscanners/avastdscan.conf'
    #!! Not compiled !! contentscanner = '/usr/local/e2guardian/etc/e2guardian/contentscanners/kavdscan.conf'
    #contentscanner = '/usr/local/e2guardian/etc/e2guardian/contentscanners/icapscan.conf'
    #!! Not compiled !! contentscanner = '/usr/local/e2guardian/etc/e2guardian/contentscanners/commandlinescan.conf'
    
    # Content scanner timeout
    # Some of the content scanners support using a timeout value to stop
    # processing (eg AV scanning) the file if it takes too long.
    # If supported this will be used.
    # The default of 60 seconds is probably reasonable.
    contentscannertimeout = 60
    
    # Content scan exceptions // THIS MOVED to e2guardianf1.conf
    # contentscanexceptions = off
    
    # Auth plugins
    # 
    # Handle the extraction of client usernames from various sources, such as
    # Proxy-Authorisation headers and ident servers, enabling requests to be
    # handled according to the settings of the user's filter group.
    #
    # If you do not use multiple filter groups, you need not specify this option.
    #
    #authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/proxy-basic.conf'
    #authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/proxy-digest.conf'
    #!! Not compiled !! authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/proxy-ntlm.conf'
    #authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/ident.conf'
    #authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/ip.conf'
    #authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/proxy-header.conf'
    #authplugin = '/usr/local/e2guardian/etc/e2guardian/authplugins/port.conf'
    
    # Map auth to ports
    # If enabled map auth plugins to ips/ports - number of authplugins must then be same as
    # number of ports
    # If disabled scan authplugins on all ports - number of authplugins can then be different
    #  to number of ports
    # on (default) | off
    #mapauthtoports = off
    
    # Re-check replaced URLs
    # As a matter of course, URLs undergo regular expression search/replace (urlregexplist)
    # *after* checking the exception site/URL/regexpURL lists, but *before* checking against
    # the banned site/URL lists, allowing certain requests that would be matched against the
    # latter in their original state to effectively be converted into grey requests.
    # With this option enabled, the exception site/URL/regexpURL lists are also re-checked
    # after replacement, making it possible for URL replacement to trigger exceptions based
    # on them.
    # Defaults to off.
    recheckreplacedurls = off
    
    # Misc settings
    
    # if on it adds an X-Forwarded-For: <clientip> to the HTTP request
    # header.  This may help solve some problem sites that need to know the
    # source ip. on | off
    forwardedfor = off
    
    # if on it uses the X-Forwarded-For: <clientip> to determine the client
    # IP. This is for when you have squid between the clients and e2guardian.
    # Warning - headers are easily spoofed. on | off
    usexforwardedfor = off
    
    # as mentioned above, the headers can be easily spoofed in order to fake the
    # request origin by setting the X-Forwarded-For header. If you have the
    # "usexforwardedfor" option enabled, you may want to specify the IPs from which
    # this kind of header is allowed, such as another upstream proxy server for
    # instance If you want authorize multiple IPs, specify each one on an individual
    # xforwardedforfilterip line.
    # xforwardedforfilterip = 
    
    # if on it logs some debug info regarding accept()ing and failed connections
    # which
    # can usually be ignored.  These are logged by syslog.  It is safe to leave
    # it on or off
    logconnectionhandlingerrors = on
    
    #sets the number of worker threads to use 
    #
    # This figure is the maximum number of concurrent connections.
    # If more connections are made, connections will queue until a worker thread is free.
    # On large site you might want to try 5000 (max value 20000)
    # 500 is the default suitable for home or samll office use on 64-bit systems
    # On 32-bit systems reduce this to 300 to avoid exceeding the <4GB
    # virtual memory limit and on Linux decrease the thread stack size from
    # 10MB to 2MB (ulimit -s 2048)
    httpworkers = 500 
    
    # Process options
    # (Change these only if you really know what you are doing).
    # These options allow you to run multiple instances of e2guardian on a single machine.
    # Remember to edit the log file path above also if that is your intention.
    
    # PID filename
    # 
    # Defines process id directory and filename.
    #pidfilename = '/usr/local/e2guardian/var/run/e2guardian.pid'
    
    # Disable daemoning
    # If enabled the process will not fork into the background.
    # It is not usually advantageous to do this.
    # on|off (defaults to off)
    nodaemon = off
    
    # Disable logging process
    # on|off (defaults to off)
    nologger = off
    
    # Enable logging of "ADs" category blocks
    # on|off (defaults to off)
    logadblocks = off
    
    # Enable logging of client User-Agent
    # Some browsers will cause a *lot* of extra information on each line!
    # on|off (defaults to off)
    loguseragent = off
    
    # Daemon runas user and group
    # This is the user that e2guardian runs as.  Normally the user/group nobody.
    # Uncomment to use.  Defaults to the user set at compile time.
    # Temp files created during virus scanning are given owner and group read
    
    # clamdscan, the two processes must run with either the same group or user ID.
    #daemonuser = 'nobody'
    #daemongroup = 'nobody'
    
    
    # Mail program
    # Path (sendmail-compatible) email program, with options.
    # Not used if usesmtp is disabled (filtergroup specific).
    ##!! Not compiled !!mailer = '/usr/sbin/sendmail -t'   # NOT YET IMPLIMENTED
    
    # Enable SSL support  
    # This must be present to enable MITM and/or Cert checking
    # default is off
    enablessl = off
    
    #SSL certificate checking path
    #Path to CA certificates used to validate the certificates of https sites.
    # if left blank openssl default ca certificate bundle will be used
    #Leave as default unless you want to load non-default cert bundle
    #sslcertificatepath = ''
    
    #SSL man in the middle
    #CA certificate path
    #Path to the CA certificate to use as a signing certificate for 
    #generated certificates.
    # default is blank - required if ssl_mitm is enabled.
    #cacertificatepath = '/home/e2/e2install/ca.pem'
    
    #CA private key path
    #path to the private key that matches the public key in the CA certificate.
    # default is blank - required if ssl_mitm is enabled.
    #caprivatekeypath = '/home/e2/e2install/ca.key'
    
    #Cert private key path
    #The public / private key pair used by all generated certificates
    # default is blank - required if ssl_mitm is enabled.
    #certprivatekeypath = '/home/e2/e2install/cert.key'
    
    #Generated cert path
    #The location where generated certificates will be saved for future use.
    #(must be writable by the dg user)
    # default is blank - required if ssl_mitm is enabled.
    #generatedcertpath = '/home/e2/e2install/generatedcerts/'
    
    #Warning: if you change the cert start/end time from default on a running 
    #         system you will need to clear the generated certificate 
    #         store and also may get problems on running client browsers
    
    #Generated cert start time (in unix time) - optional
    # defaults to 1417872951 = 6th Dec 2014
    # generatedcertstart = 1417872951 
    
    #Generated cert end time (in unix time) - optional
    # defaults to generatedcertstart + 10 years
    #genratedcertend =
    # generatedcertstart =
    
    #Use openssl configuration file
    # switch this on if you want e2g to read in openssl configuration
    # This is useful if you want to use a hardware acceleration engine.
    # default is off
    #useopensslconf = off
    #
    
    #Alternate openssl configuration file
    # only used if useopensslconf = on
    # default is to use standard openssl configuration file
    # only use this if an alternate openssl configuration file is used for e2g
    # opensslconffile = '/home/e2/openssl.conf'
    
    
    # monitor helper path 
    # If defined this script/binary will be called with start or stop appended as follows:-
    # Note change in V4!!! - No longer detects cache failure
    # At start after e2guardian has started listener and worker threads with 
    # ' start' appended
    # When e2guardian is stopping with ' stop' appended
    # monitorhelper = '/usr/local/bin/mymonitor'  
    
    # monitor flag prefix path 
    # If defined path will be used to generate flag files as follows:-
    # 
    # At start after e2guardian has started listener and worker threads with 
    #  'running' appended
    # When e2guardian is stopping with 'paused' appended
    # Note change in V4!!! - No longer detects cache failure
    # monitorflagprefix = '/home/e2g/run/e2g_flag_'
    
    # Much logic has moved to storyboard files
    preauthstoryboard = '/usr/local/e2guardian/etc/e2guardian/preauth.story'
    
    # Storyboard tracing
    # Warning - produces verbose output - do not use in production
    # Output goes to syslog (or stderr in debug mode)
    # default off
    # storyboardtrace = off
    
    # Abort if list is missing or unreadable
    # default is to warn but then ignore missing lists
    # To abort on missing list set to on
    # abortiflistmissing = off  //NOT YET IMPLIMENTED
    
    #Search sitelist for ip sites
    # In v5 a separate set of lists has been introduced for IP sites
    # and normally e2g will no longer check site lists for ip's
    # If you want to keep backward list compatablity then set this to
    # 'on' - but note this incurs an overhead - putting IP in ipsitelists
    # and setting this to off gives the fastest implimentation.
    # default is 'on'
    searchsitelistforip = on
    
    
    # http header checking setings
    #
    # Limit number of http header lines in a request/response
    # (to guard against attacks)
    # Minimum 10 max 250
    # default 50
    # maxheaderlines = 50
