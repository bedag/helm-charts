---
# Source: values/templates/values-generator.yaml
## Global Values
##
global:

  ## Global Docker Image Registry
  # global.imageRegistry -- Global Docker Image Registry declaration. Will overwrite all child .registry fields.
  imageRegistry: ""

  ## Global Default Image Tag
  # global.defaultTag -- Global Docker Image Tag declaration. Will be used as default tag, if no tag is given by child
  defaultTag: ""

  ## Global Docker Image PullPolicy
  # global.imagePullPolicy -- Global Docker Image Pull Policy declaration. Will overwrite all child .pullPolicy fields.
  imagePullPolicy: ""

  ## Global StorageClass
  # global.storageClass -- Global StorageClass declaration. Can be used to overwrite StorageClass fields.
  storageClass: ""

  ## Global Image Pull Secrets
  # global.imagePullSecrets -- Global Docker Image Pull Secrets declaration. Added to local Docker Image Pull Secrets.
  imagePullSecrets: []


## Common Values
##

## Overwrite Name Template
# nameOverride -- Overwrite "lib.internal.common.name" output
nameOverride: ""

## Overwrite Fullname Template
# fullnameOverride -- Overwrite `lib.utils.common.fullname` output
fullnameOverride: ""

## Common Labels
# commonLabels -- Common Labels are added to each kubernetes resource manifest.
commonLabels: {}

## Overwrite Labels
# overwriteLabels -- Overwrites default labels, but not resource specific labels and common labels
overwriteLabels: {}

## Selector Labels
# selectorLabels -- Define default [selectorLabels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
selectorLabels: {}

## Version Capabilities
# kubeCapabilities -- Overwrite the Kube GitVersion
# @default -- `$.Capabilities.KubeVersion.GitVersion`
kubeCapabilities: ""

## Proxy Values
##
proxy:

  ## HTTP Proxy Configuration
  httpProxy:

    ## HTTP Proxy Host Configuration
    # proxy.httpProxy.host -- Configure HTTP Proxy Hostname/IP (without protocol://)
    host: ""

    ## HTTP Proxy Port Configuration
    # proxy.httpProxy.port -- (int) Configure HTTP Proxy Port
    port:

    ## HTTP Proxy Protocol Configuration
    # proxy.httpProxy.protocol -- Configure HTTP Proxy Protocol (http/https)
    # @default -- http
    protocol: ""

  ## HTTPS Proxy Configuration
  httpsProxy:

    ## HTTPS Proxy Host Configuration
    # proxy.httpsProxy.host -- Configure HTTPS Proxy Hostname/IP (without protocol://)
    host: ""

    ## HTTP Proxy Port Configuration
    # proxy.httpsProxy.port -- (int) Configure HTTPS Proxy Port
    port:

    ## HTTP Proxy Protocol Configuration
    # proxy.httpsProxy.protocol -- Configure HTTPS Proxy Protocol (http/https)
    # @default -- http
    protocol: ""

  ## No Proxy Hosts Configuration
  # proxy.noProxy -- Configure No Proxy Hosts
  # noProxy: [ "localhost", "127.0.0.1" ]
  noProxy: []

## Define Container Timezone
# timezone -- Define Container Timezone (Sets TZ Environment)
timezone: "Europe/Zurich"

## Kafdrop Configuration
## Defines values which will be set as environment variable for the
## kafdrop pod.
##
config:

  ## Kafka SubElement
  ##
  kafka:

    ## Define Connection Endpoints to Kafka
    ## brokers. Can be of type array/slice or
    ## a comma separated string
    ##
    connections:
      - localhost:9092

    ## Kafka Properties Configuration
    ##
    properties:
      ## Optional Content for Kafka Properties
      content: |
        {{ toString "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='suchUser' password='veryS3CRET';\nsecurity.protocol=SASL_PLAINTEXT\nsasl.mechanism=PLAIN" | b64enc }}
      destination: "kafka.properties"

    # Truststore Configuration
    truststore:
      ## Optional Content for Kafka Truststore
      # content needs to be base64 encoded string
      content: ""
      destination: "kafka.truststore.jks"

    ## Keystore Configuration
    ##
    keystore:
      ## Optional Content for Keystore
      # content needs to be base64 encoded string
      content: ""
      destination: "kafka.keystore.jks"

  ## Server/Servlet Configuration
  ##
  server:
    port: "9000"
    context: "/"

  ## JVM Options
  ## Can be declared as slice or single string
  ##
  jvm:
    - "-Xms128M"
    - "-Xmx256M"

  ## Kafdrop additional commandline arguments
  ## Can be declared as slice or single string
  ##
  # cmdArgs:
  #   - "someArg"
  #   - "anotherArg"

  ## Protocol Description Configuration
  ##
  protoDesc:

    ## Enable the usage of ProtoDescriptors.
    ## Enabling this option will automaticaly
    ## set --message.format=PROTOBUF and
    ## --protobufdesc.directory as commandline arguments
    ##
    enabled: false

    ## Define the directory which is used
    ## for proto descriptors (results in:
    ## --protobufdesc.directory=/proto-descriptors)
    ##
    path: "/proto-descriptors"

    ## Define descriptor files in array style
    ## which will be mounted into the descriptors path
    ##
    files: []

# Source: values/templates/values-generator.yaml
#
## - Deployment
## Reference: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
##
deployment:

  ## Deployment API version
  # kafdrop.apiVersion -- Configure the api version used for the Deployment resource
  apiVersion: ""

  ## Deployment Labels
  # kafdrop.labels -- Merges given labels with common labels
  labels: {}

  ## Deployment Selector Labels
  # kafdrop.selectorLabels -- Define SelectorLabels for the Pod Template
  selectorLabels: {}

  ## Amount of Replicas
  # kafdrop.replicaCount -- Amount of Replicas deployed
  replicaCount: 1

  ## Deployment Update Strategy
  # kafdrop.strategy -- Deployment [Update Strategy](https://kubernetes.io/docs/concepts/services-networking/ingress/#resource-backend). **Deployments only**
  strategy: {}
  #  type: RollingUpdate
  #    maxSurge: 1
  #    maxUnavailable: 0

  ## Deployment Extra Values
  # kafdrop.deploymentExtras -- Extra Fields for Deployment Manifest
  deploymentExtras: {}
  # progressDeadlineSeconds: "600s"
  #

  ## Pod Configuration
  ## https://github.com/bedag/helm-charts/tree/master/charts/manifests/templates/manifests/README.md#pod-template
  ## Full Configuration

  ## Image Pull Secrets
  # kafdrop.imagePullSecrets -- Define [ImagePullSecrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/). Will be overwritten if set by global variable.
  imagePullSecrets: []

  ## Pod Labels
  # kafdrop.podLabels -- Pod [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) are only added for the pod
  podLabels: {}

  ## Pod Annotations
  # kafdrop.podAnnotations -- Pod [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) are only added for the pod
  podAnnotations: {}

  ## Pod ForceRedeploy
  ## kafdrop.forceRedeploy -- Adds timestamp annotation, causing your pods to be redeployed everytime a new release applied.
  forceRedeploy: false

  ## Extra Pod Fields
  # kafdrop.podFields -- Add extra field to the [Pod Template](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#podtemplate-v1-core) if not available as value.
  podFields: {}
  #  hostNetwork: true

  ## Additional Kubernetes Volumes
  # kafdrop.volumes -- Additional [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumes: []
  #  - name: cache
  #    emptyDir: {}
  #  - name: share
  #    persistentVolumeClaim:
  #      claimName: 'shared'

  ## RestartPolicy Configuration
  # kafdrop.restartPolicy -- Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
  restartPolicy:

  ## Affinity Configuration
  # kafdrop.affinity -- Pod [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}

  ## NodeSelector Configuration
  # kafdrop.nodeSelector -- Pod [NodeSelector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
  nodeSelector: {}

  ## Tolerations Configuration
  # kafdrop.tolerations -- Pod [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
  tolerations: {}

  ## Priority Configuration
  # kafdrop.priorityClassName -- Pod [priorityClassName](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
  priorityClassName: ""

  ## Pod SecurityContext Configuration
  # kafdrop.podSecurityContext -- Pod [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext:
    {}

  ## Pod Initcontainers
  # kafdrop.initContainers -- Pod [initContainers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)
  initContainers: []
  #  - name: init-myservice
  #    image: busybox:1.28
  #    command: ['sh', '-c', "until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

  ## Pod SideCar Containers
  # kafdrop.sidecars -- Allows to add sidecars to your [maincar]](https://kubernetes.io/docs/concepts/workloads/pods/#using-pods)
  sidecars: []

  #
  ## - ServiceAccount
  ## Reference: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ## API Reference: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#serviceaccount-v1-core
  ##
  serviceAccount:

    ## ServiceAccount Creation
    # kafdrop.serviceAccount.enabled -- Specifies whether a service account is enabled or not
    enabled: false

    ## ServiceAccount Creation
    # kafdrop.serviceAccount.create -- Specifies whether a service account should be created
    create: false

    ## ServiceAccount API version
    # kafdrop.serviceAccount.apiVersion -- Configure the api version used
    # @default -- v1
    apiVersion: ""

    ## ServiceAccount Labels
    # kafdrop.serviceAccount.labels -- Merges given labels with common labels
    labels: {}

    ## ServiceAccount Annotations
    # kafdrop.serviceAccount.annotations -- Annotations to add to the service account
    annotations: {}

    ## ServiceAccount Auto Mount Service Token
    # kafdrop.serviceAccount.automountServiceAccountToken -- (bool) AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted.
    automountServiceAccountToken: true

    ## ServiceAccount Image pull secrets
    # kafdrop.serviceAccount.imagePullSecrets -- ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount.
    imagePullSecrets: []

    ## ServiceAccount Global PullSecrets
    # kafdrop.serviceAccount.globalPullSecrets -- Evaluate global set pullsecrets and mount, if set
    globalPullSecrets: false

    ## ServiceAccount Secrets
    # kafdrop.serviceAccount.secrets -- Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount
    secrets: []

    ## ServiceAccount Name
    # kafdrop.serviceAccount.name -- If not set and create is true, a name is generated using the fullname template
    name: ""


  ## Container Configuration
  ## https://github.com/bedag/helm-charts/tree/master/charts/manifests/templates/manifests/README.md#container-template
  ## Full Configuration


  #
  ## -- Container
  ## Reference: https://kubernetes.io/de/docs/concepts/containers/
  ## Container API Object - https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#container-v1-core
  #

  ## Custom Container Name
  # kafdrop.containerName -- Configure Container Name
  # @default -- `.Chart.Name`
  containerName:

  ## Docker Image definition.
  image:
    # kafdrop.image.registry -- Configure Docker Registry. Will be overwritten if set by global variable.
    registry: docker.io

    # kafdrop.image.repository -- Configure Docker Repository
    repository: obsidiandynamics/kafdrop

    # kafdrop.image.pullPolicy -- Configure Docker Pull Policy. Will be overwritten if set by global variable.
    pullPolicy:

    # kafdrop.image.tag -- Configure Docker Image tag
    # @default -- Tag defaults to `.Chart.Appversion`, if not set
    tag:

  ## Container Resources
  # kafdrop.resources -- Configure Container [Resource](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  resources:
    {}
  #  requests:
  #    memory: "64Mi"
  #    cpu: "250m"
  #  limits:
  #    memory: "128Mi"
  #    cpu: "500m"

  ## Container Command
  # kafdrop.command -- Configure executed container command
  command:
    {}

  ## Container Command Args
  # kafdrop.args -- Configure arguments for executed command
  args:
    {}

  ## Environment Variables
  # kafdrop.environment -- Configure Environment Variables (Refer to values.yaml)
  environment:
    []
  # - name: "MY_ENV"
  #   value: "someValue"
  #   secret: true
  # - name: SOME_SPEC
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: spec.*
  #

  ## Container Ports
  # kafdrop.ports -- Configure Container Ports
  ports:
    []
  # - name: "health"
  #   containerPort: 9090
  #   protocol: TCP

  ## Additional Volume Mounts
  # kafdrop.volumeMounts -- Configure Container [volumeMounts](https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/)
  volumeMounts:
    []
  #  - name: "cache"
  #    mountPath: /cache
  #  - name: "share"
  #    mountPath: /var/data/share

  ## Container SecurityContext
  # kafdrop.securityContext -- Container [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  securityContext:
    {}

  ## ReadinessProbe Configuration
  # kafdrop.readinessProbe -- Container [ReadinessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes)
  readinessProbe:
    httpGet:
      path: "{{ include \"kafdrop.endpoint\" $ }}"
      port: http
    initialDelaySeconds: 60

  ## LivenessProbe Configuration
  # kafdrop.livenessProbe -- Container [LivenessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command)
  livenessProbe:
    httpGet:
      path: "{{ include \"kafdrop.endpoint\" $ }}"
      port: http
    initialDelaySeconds: 60

  ## StartupProbe Configuration
  # kafdrop.startupProbe -- Container [StartupProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes)
  startupProbe:
    {}
  #  httpGet:
  #    path: /health
  #    port: http
  #  failureThreshold: 30
  #  periodSeconds: 10

  ## Container Lifecycle Hooks
  # kafdrop.lifecycle -- Container [Lifecycle](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/)
  lifecycle:
    {}
  #  postStart:
  #    exec:
  #      command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

  ## Container ExtraFields
  # kafdrop.containerFields -- Extra fields used on the container definition
  containerFields:
    {}
  #  stdinOnce: true

## - Service
## Reference: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:

  ## Service Enable
  # kafdrop.enabled -- Enable Service Resource
  enabled: true

  ## Service API version
  # kafdrop.apiVersion -- Configure the api version used
  # @default -- v1
  apiVersion: ""

  ## Service Labels
  # kafdrop.labels -- Configure Service additional Labels
  labels: {}

  ## Service Annotations
  # kafdrop.annotations -- Configure Service additional Annotations ([Monitor Labels](https://www.weave.works/docs/cloud/latest/tasks/monitor/configuration-k8s/))
  annotations: {}

  ## Service Type
  # kafdrop.type -- Configure Service [Type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  type: ClusterIP

  ## Service Port Name
  # kafdrop.portName -- Configure Service Port name
  # @default -- http
  portName: ""

  ## Service Port
  # kafdrop.port -- Configure Service Port (Required)
  # @default -- 80
  port: 9000

  ## Service Target Port
  # kafdrop.targetPort -- Configure Service TargetPort
  # @default -- http
  targetPort: ""

  ## Service Extra Ports
  # kafdrop.extraPorts -- Add additional ports to the service
  extraPorts: []

  ## Service NodePort ([Reference](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport))
  # kafdrop.nodePort -- Specify the nodePort value for the LoadBalancer and NodePort service types
  nodePort: ""

  ## Service Loadbalancer IP
  # kafdrop.loadBalancerIP -- Configure Service [loadBalancerIP](https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer). Set the LoadBalancer service type to internal only.
  loadBalancerIP: ""

  ## Service Load Balancer SourceRanges
  # kafdrop.loadBalancerSourceRanges -- Configure Service [loadBalancerSourceRanges](https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service)
  ## Example:
  ## loadBalancerSourceRanges:
  ## - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []

  ## Service ClusterIP
  # kafdrop.clusterIP -- Configure Service [clusterIP](https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address)
  # @default -- None
  # clusterIP: None

  ## Service Selector
  # kafdrop.selector -- Configure Service Selector Labels
  selector: {}

# Source: values/templates/values-generator.yaml
#
## - Ingress
## Reference: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:

  ## Enable Ingress
  # ingress.enabled -- Enable Ingress Resource
  enabled: true

  ## Ingress API version
  # ingress.apiVersion -- Configure the api version used for the ingress resource.
  apiVersion: ""

  ## Ingress Labels
  # ingress.labels -- Configure Ingress additional Labels
  labels: {}

  ## Ingress Annotations
  # ingress.annotations -- Configure Ingress Annotations
  annotations: {}
  #  kubernetes.io/ingress.class: nginx (Deprecated)
  #  kubernetes.io/tls-acme: "true"

  ## Ingress Default Backend
  # ingress.backend -- Configure a [default backend](https://kubernetes.io/docs/concepts/services-networking/ingress/#default-backend) for this ingress resource
  backend: {}
  # service:
  #   name: backend
  #   port:
  #     number: 80

  ## Ingress Default Class
  # ingress.ingressClass -- Configure the [default ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class) for this ingress.
  ingressClass: ""

  ## Ingress HTTP Rules
  # ingress.hosts -- Configure Ingress [Hosts](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules) (Required)
  hosts: []

  # ingress.hosts[0].host -- Ingress Hostname
  #  - host: chart-example.local
  #
  # ingress.hosts[0].paths -- Ingress Paths
  #    paths:
  #
  ## Path with service backend
  #
  # ingress.hosts[0].paths[0].path -- Ingress Path Context
  #      - path: "/"
  #
  # ingress.hosts[0].paths[0].serviceName -- Ingress Path service backend name
  # @default -- `bedag-lib.utils.common.fullname`
  #        serviceName: ""
  #
  # ingress.hosts[0].paths[0].servicePort -- Ingress Path service backend port. With new ingress resources there's a distinction between port name and number references. If you want to reference a port number, make sure it's type integer or float and is not quoted in the values.
  # @default -- http
  #        servicePort: ""
  #
  ## Path with resource backend
  #
  # ingress.hosts[0].paths[1].path -- Ingress Path Context
  #      - path: "/storage"
  #
  # ingress.hosts[0].paths[1].pathType -- Ingress path [pathType](https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types)
  # @default -- Prefix
  #        pathType: "ImplementationSpecific"
  #
  # ingress.hosts[0].paths[1].resource -- Ingress path resource backend
  #        resource:
  #          apiGroup: k8s.example.com
  #          kind: StorageBucket
  #          name: icon-assets
  #
  # ingress.hosts[0].paths[2].path -- Direct Ingress Path. Defaults to service backend.
  #      - "/"
  #

  ## Ingress TLS Configuration
  # ingress.tls -- Configure Ingress [TLS](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  ## Custom Ingress Rules
  # ingress.customRules -- Configure Custom Ingress [Rules](https://kubernetes.io/docs/concepts/services-networking/ingress/#resource-backend)
  customRules: []
  #  - http:
  #      paths:
  #        - path: /icons
  #          pathType: ImplementationSpecific
  #          backend:
  #            resource:
  #              apiGroup: k8s.example.com
  #              kind: StorageBucket
  #              name: icon-assets

# Source: values/templates/values-generator.yaml
#
## - Pod disruption budget
## Reference: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
##
pdb:

  ## Enable Pdb
  # pdb.enabled -- Enable Pdb Resource
  enabled: true

  ## Pdb API version
  # pdb.apiVersion -- Configure the api version used for the Pdb resource
  apiVersion: ""

  ## Pdb Labels
  # pdb.labels -- Merges given labels with common labels
  labels: {}

  ## Pdb Selector Labels
  # pdb.selectorLabels -- Define SelectorLabels for the pdb
  selectorLabels: {}

  ## Pdb minAvailable
  # pdb.minAvailable -- Number or percentage of pods which must be available during a disruption. If neither `minAvailable` or `maxUnavailable` is set, the Policy defaults to `minAvailable: 1`
  minAvailable:

  ## Pdb maxUnavailable
  # pdb.maxUnavailable -- Number or percentage of pods which is allowed to be unavailable during a disruption
  maxUnavailable:

# Source: values/templates/values-generator.yaml
#
## - Horizontal Pod Autoscaler
## Reference: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
autoscaling:

  ## Horizontal Pod Autoscaler Enable
  # autoscaling.enabled --  Enable HPA resource
  enabled: true

  ## Horizontal Pod Autoscaler API version
  # autoscaling.apiVersion -- Configure the api version used for the Job resource.
  apiVersion: ""

  ## Horizontal Pod Autoscaler Labels
  # autoscaling.labels -- Merges given labels with common labels
  labels: {}

  ## Horizontal Pod Autoscaler Annotations
  # autoscaling.annotations -- Configure HPA Annotations
  annotations: {}

  ## Horizontal Pod Autoscaler Target
  # autoscaling.scaleTargetRef -- scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
  scaleTargetRef:

  ## Horizontal Pod Autoscaler minimum Replicas
  # autoscaling.minReplicas -- minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.
  # @default -- 1
  minReplicas:

  ## Horizontal Pod Autoscaler minimum Replicas
  # autoscaling.maxReplicas -- maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
  maxReplicas:

  ## Horizontal Pod Autoscaler Target CPU
  # autoscaling.targetCPUUtilizationPercentage -- Set the averageUtilization for the CPU resrouce as integer percentage (e.g. 50 = 50%)
  targetCPUUtilizationPercentage:

  ## Horizontal Pod Autoscaler Target Memory
  # autoscaling.targetMemoryUtilizationPercentage -- Set the averageUtilization for the Memory resrouce as integer percentage (e.g. 50 = 50%)
  targetMemoryUtilizationPercentage:

  ## Horizontal Pod Autoscaler Custom Metric Rules
  # autoscaling.metrics -- Define [Custom Metrics](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#autoscaling-on-multiple-metrics-and-custom-metrics) rules
  metrics: []
  #
  # - type: External
  #   external:
  #     metric:
  #       name: queue_messages_ready
  #       selector: "queue=worker_tasks"
  #     target:
  #       type: AverageValue
  #       averageValue: 30
  #
  #  - type: Object
  #    object:
  #      metric:
  #        name: requests-per-second
  #      describedObject:
  #        apiVersion: networking.k8s.io/v1beta1
  #        kind: Ingress
  #        name: main-route
  #      target:
  #        type: Value
  #        value: 10k

  ## Horizontal Pod Autoscaler Scale Behavior
  # autoscaling.behavior -- Define [Scaling Policies](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-configurable-scaling-behavior) for the HPA resource.
  behavior: {}
  #
  #  scaleDown:
  #    policies:
  #    - type: Pods
  #      value: 4
  #      periodSeconds: 60
  #    - type: Percent
  #      value: 10
  #      periodSeconds: 60

jmxExporter:

  ## Enable JMX Exporter
  # jmxExporter.enabled -- Enables [JMX Exporter](https://github.com/bitnami/bitnami-docker-jmx-exporter) as Sidecar
  enabled: false

  ## Component Name
  # jmxExporter.name -- Name for all component parts (ports, resources). Useful when you are using the component multiple times
  name: "jmx"

  ## Component Specific Labels
  # jmxExporter.labels -- Component Specific Labels.
  labels:
    app.kubernetes.io/component: metrics

  ## JMX Exporter TargetPort
  # jmxExporter.targetPort -- Define which Port to scrape. Points to the Port where the jmx metrics are exposed on the Maincar.
  targetPort: 5555

  ## JMX Exporter Port
  # jmxExporter.port -- Exposed JMX Exporter Port (Service and Sidecar)
  port: 5556

  ## Prometheus Endpoint Configuration
  # jmxExporter.endpoint -- Additional Configuration for the ServiceMonitor Endpoint (Overwrites .serviceMonitor.endpoints)
  endpoint:
    path: "/"
    interval: 10s
    scrapeTimeout: 10s

  ## JMX Exporter Configuration
  # jmxExporter.config -- Configure JMX Exporter configuration. The `jmxUrl` configuration will be set automatically, if not overwritten. [See all Configurations](https://github.com/prometheus/jmx_exporter#configuration)
  # @default -- See values.yaml
  config:
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false


  ## Container Configuration
  ## https://github.com/bedag/helm-charts/tree/master/charts/manifests/templates/manifests/README.md#container-template#container-template
  ## Full Configuration


  #
  ## -- Container
  ## Reference: https://kubernetes.io/de/docs/concepts/containers/
  ## Container API Object - https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#container-v1-core
  #

  ## Custom Container Name
  # jmxExporter.containerName -- Configure Container Name
  # @default -- `.Chart.Name`
  containerName:

  ## Docker Image definition.
  image:
    # jmxExporter.image.registry -- Configure Docker Registry. Will be overwritten if set by global variable.
    registry: docker.io

    # jmxExporter.image.repository -- Configure Docker Repository
    repository: bitnami/jmx-exporter

    # jmxExporter.image.pullPolicy -- Configure Docker Pull Policy. Will be overwritten if set by global variable.
    pullPolicy:

    # jmxExporter.image.tag -- Configure Docker Image tag
    # @default -- Tag defaults to `.Chart.Appversion`, if not set
    tag: 0.13.0-debian-10-r52

  ## Container Resources
  # jmxExporter.resources -- Configure Container [Resource](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  resources:
    {}
  #  requests:
  #    memory: "64Mi"
  #    cpu: "250m"
  #  limits:
  #    memory: "128Mi"
  #    cpu: "500m"

  ## Container Command
  # jmxExporter.command -- Configure executed container command
  command:
    {}

  ## Container Command Args
  # jmxExporter.args -- Configure arguments for executed command
  args:
    {}

  ## Environment Variables
  # jmxExporter.environment -- Configure Environment Variables (Refer to values.yaml)
  environment:
    {}
  # - name: "MY_ENV"
  #   value: "someValue"
  #   secret: true
  # - name: SOME_SPEC
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: spec.*
  #

  ## Container Ports
  # jmxExporter.ports -- Configure Container Ports
  ports:
    {}
  # - name: "health"
  #   containerPort: 9090
  #   protocol: TCP

  ## Additional Volume Mounts
  # jmxExporter.volumeMounts -- Configure Container [volumeMounts](https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/)
  volumeMounts:
    {}
  #  - name: "cache"
  #    mountPath: /cache
  #  - name: "share"
  #    mountPath: /var/data/share

  ## Container SecurityContext
  # jmxExporter.securityContext -- Container [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  securityContext:
    {}

  ## ReadinessProbe Configuration
  # jmxExporter.readinessProbe -- Container [ReadinessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes)
  readinessProbe:
    {}
  #  httpGet:
  #    path: /health
  #    port: http
  #  initialDelaySeconds: 60

  ## LivenessProbe Configuration
  # jmxExporter.livenessProbe -- Container [LivenessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command)
  livenessProbe:
    {}
  #  httpGet:
  #    path: /health
  #    port: http
  #  initialDelaySeconds: 60

  ## StartupProbe Configuration
  # jmxExporter.startupProbe -- Container [StartupProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes)
  startupProbe:
    {}
  #  httpGet:
  #    path: /health
  #    port: http
  #  failureThreshold: 30
  #  periodSeconds: 10

  ## Container Lifecycle Hooks
  # jmxExporter.lifecycle -- Container [Lifecycle](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/)
  lifecycle:
    {}
  #  postStart:
  #    exec:
  #      command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

  ## Container ExtraFields
  # jmxExporter.containerFields -- Extra fields used on the container definition
  containerFields:
    {}
  #  stdinOnce: true

  ## Service Configuration
  ## https://github.com/bedag/helm-charts/tree/master/charts/manifests/templates/manifests/README.md#container-template#service
  ## Full Configuration

  #
  ## - Service
  ## Reference: https://kubernetes.io/docs/concepts/services-networking/service/
  ##
  service:

    ## Service Enable
    # jmxExporter.service.enabled -- Enable Service Resource
    enabled: true

    ## Service API version
    # jmxExporter.service.apiVersion -- Configure the api version used
    # @default -- v1
    apiVersion: ""

    ## Service Labels
    # jmxExporter.service.labels -- Configure Service additional Labels
    labels: {}

    ## Service Annotations
    # jmxExporter.service.annotations -- Configure Service additional Annotations ([Monitor Labels](https://www.weave.works/docs/cloud/latest/tasks/monitor/configuration-k8s/))
    annotations: {}

    ## Service Type
    # jmxExporter.service.type -- Configure Service [Type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
    type: ClusterIP

    ## Service Port Name
    # jmxExporter.service.portName -- Configure Service Port name
    # @default -- http
    portName: ""

    ## Service Port
    # jmxExporter.service.port -- Configure Service Port (Required)
    # @default -- 80
    port:

    ## Service Target Port
    # jmxExporter.service.targetPort -- Configure Service TargetPort
    # @default -- http
    targetPort: ""

    ## Service Extra Ports
    # jmxExporter.service.extraPorts -- Add additional ports to the service
    extraPorts: []

    ## Service NodePort ([Reference](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport))
    # jmxExporter.service.nodePort -- Specify the nodePort value for the LoadBalancer and NodePort service types
    nodePort: ""

    ## Service Loadbalancer IP
    # jmxExporter.service.loadBalancerIP -- Configure Service [loadBalancerIP](https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer). Set the LoadBalancer service type to internal only.
    loadBalancerIP: ""

    ## Service Load Balancer SourceRanges
    # jmxExporter.service.loadBalancerSourceRanges -- Configure Service [loadBalancerSourceRanges](https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service)
    ## Example:
    ## loadBalancerSourceRanges:
    ## - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []

    ## Service ClusterIP
    # jmxExporter.service.clusterIP -- Configure Service [clusterIP](https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address)
    # @default -- None
    # clusterIP: None

    ## Service Selector
    # jmxExporter.service.selector -- Configure Service Selector Labels
    selector: {}

  ## ServiceMonitor Configuration
  ## https://github.com/bedag/helm-charts/tree/master/charts/manifests/templates/manifests/README.md#container-template#servicemonitor
  ## Full Configuration

  #
  ## - ServiceMonitor
  ## Reference: https://docs.openshift.com/container-platform/4.4/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html
  ## ServiceMonitor API Object - https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#servicemonitorspec
  ##
  serviceMonitor:

    ## Enable ServiceMonitor
    # jmxExporter.serviceMonitor.enabled -- Enable serviceMonitor Resource
    enabled: true

    ## ServiceMonitor API version
    # jmxExporter.serviceMonitor.apiVersion -- Configure the api version used for the ServiceMonitor resource
    apiVersion: ""

    ## ServiceMonitor Namespace
    ## jmxExporter.serviceMonitor.namespace -- Define the namespace to deploy the srviceMonitor in
    namespace: ""

    ## ServiceMonitor NamespaceSelector
    # jmxExporter.serviceMonitor.namespaceSelector -- Define which Namespaces to watch. Can either be type string or slice
    # @default -- `$.Release.Namespace`
    namespaceSelector: []

    ## ServiceMonitor Additional Fields
    # jmxExporter.serviceMonitor.additonalFields -- Define additional fields, which aren't available as seperat key (e.g. `sampleLimit`)
    additonalFields: {}

    ## ServiceMonitor Endpoint Configuration
    # jmxExporter.serviceMonitor.endpoints -- Configure Prometheus ServiceMonitor [Endpoints](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#endpoint)
    endpoints: {}
    #  - port: metrics
    #    path: "/"
    #    interval: 10s
    #    scrapeTimeout: 10s

    ## ServiceMonitor labels
    # jmxExporter.serviceMonitor.labels -- Configure Prometheus ServiceMonitor labels
    labels: {}

    ## ServiceMonitor Selector Configuration
    # jmxExporter.serviceMonitor.selector -- Configure Prometheus ServiceMonitor Selector
    selector: {}
