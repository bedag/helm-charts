suite: Test Service Manifest (With Common Values)
templates:
  - manifests.yaml
tests:

##
## Passing Test Scenarios
##

  - it: Common Labels & Partial Name
    values:
      - ./values/common/name.yaml
      - ./values/common/labels.yaml
    set:
      unit:
        manifests: 
          service:
            enabled: true
    asserts:
      - equal:
          path: metadata.name
          value: "RELEASE-NAME-partial"
      - equal:
          path: metadata.labels.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"
      - equal:
          path: metadata.labels.[app.kubernetes.io/name]
          value: "RELEASE-NAME-partial"
      - equal:
          path: metadata.labels.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"
      - isNotEmpty:
          path: metadata.labels.[app.kubernetes.io/version] 
      - isNotEmpty:
          path: metadata.labels.[app.kubernetes.io/managed-by] 
      - equal:
          path: spec.selector.[app.kubernetes.io/name]
          value: "RELEASE-NAME-partial"
      - equal:
          path: spec.selector.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"


  - it: Incluenced Common Selector Fields
    values:
      - ./values/common/name.yaml
      - ./values/common/selector.yaml
    set:
      unit:
        manifests: 
          service:
            enabled: true
    asserts:
      - equal:
          path: metadata.name
          value: "RELEASE-NAME-partial"
      - equal:
          path: spec.selector.[common.selector/1]
          value: true

  ## use COmmon Selector and Manifest Selectors
  - it: Service Selector prioritized over Common Selector
    values:
      - ./values/common/name.yaml
      - ./values/common/labels.yaml
      - ./values/common/selector.yaml
    set:
      unit:
        manifests: 
          service:
            enabled: true
            selector:
              "service.selector/1": true
    asserts:
      - equal:
          path: metadata.name
          value: "RELEASE-NAME-partial"
      - equal:
          path: spec.selector.[service.selector/1]
          value: true
      - isEmpty:
          path: spec.selector.[common.selector/1]

  ## Overwrite Fullname
  - it: Fullname Overwrite
    values:
      - ./values/common/fullname.yaml
      - ./values/common/labels.yaml
    set:
      unit:
        manifests: 
          service:
            enabled: true
    asserts:
      - equal:
          path: metadata.name
          value: "fullname"
      - equal:
          path: metadata.labels.[app.kubernetes.io/name]
          value: "fullname"
      - equal:
          path: metadata.labels.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"
      - equal:
          path: metadata.labels.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"
      - isNotEmpty:
          path: metadata.labels.[app.kubernetes.io/version] 
      - isNotEmpty:
          path: metadata.labels.[app.kubernetes.io/managed-by] 
      - equal:
          path: spec.selector.[app.kubernetes.io/name]
          value: "fullname"
      - equal:
          path: spec.selector.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"

  ## Overwrite Fullname & Labels
  - it: Fullname and Labels Overwrite
    values:
      - ./values/common/fullname.yaml
      - ./values/common/overwrites.yaml
    set:
      unit:
        manifests: 
          service:
            enabled: true
    asserts:
      - equal:
          path: metadata.name
          value: "fullname"
      - equal:
          path: metadata.labels.[common.overwrite/1]
          value: true
      - isEmpty:
          path: metadata.labels.[app.kubernetes.io/instance]
      - isEmpty:
          path: metadata.labels.[app.kubernetes.io/version] 
      - isEmpty:
          path: metadata.labels.[app.kubernetes.io/managed-by] 
      - equal:
          path: spec.selector.[app.kubernetes.io/name]
          value: "fullname"
      - equal:
          path: spec.selector.[app.kubernetes.io/instance]
          value: "RELEASE-NAME"